[{"title":"使用Python打造自己的垃圾分类小程序","date":"2020-10-17T11:44:04.823Z","path":"2020/10/17/waste-classifier/","text":"环境搭建我们需要以下程序 PyCharm Community Edition 2020.2（可选） Python 3 创建自己的数据集新建一个目录trains,创建两个文件train.csv与train.json trains/ train.csv train.jsontrain.json留空,train.csv写入以下内容 塑料袋,1 塑料保鲜膜,1 一次性餐具,2 泥土,2 黄瓜,3 茄子,3 白菜,3 大豆,3 中药残渣,3 易拉罐,1 花朵,3 电池,4 影像带,4 荧光灯,4 其中1代表可回收垃圾,2代表干垃圾(其他垃圾),3代表湿垃圾(厨余垃圾或易腐垃圾),4代表有害垃圾. 1、格式化数据程序新建formater.py trains/ train.csv train.json formater.py安装jieba分词pip install jieba -i https://pypi.douban.com/simple/如果出现Successfully installed jieba-***字样，表示安装成功，否则可能是网络问题 https://pypi.douban.com/simple/是豆瓣的镜像，如果使用默认镜像会超时 示例import jieba s = \"塑料保鲜膜\" print(list(jieba.cut(s, cut_all=True))) 结果： Building prefix dict from the default dictionary ... Loading model from cache C:\\Users\\mayn\\AppData\\Local\\Temp\\jieba.cache Loading model cost 0.615 seconds. Prefix dict has been built successfully. ['塑料', '保鲜', '保鲜膜']jieba.cut用来分词，cut_all参数用来指定是否使用“全分词”模式。 Jieba’s Github 开始正式编写import jieba import json def read(s: str): data = [] for i in s.splitlines(): k = [] for j in i.split(\",\"): k.append(j) data.append(k) return data with open(\"trains/train.csv\", \"r\", encoding=\"utf-8\") as f: s = f.read() print(s) data = read(s) print(data) json_data = [] for i in data: print(i) field = i[0] field_jieba = list(jieba.cut(field, cut_all=True)) json_data.append([field_jieba, int(i[1])]) with open(\"trains/train.json\", \"w\") as f: s = json.dumps(json_data) f.write(s) read函数：读取csv函数for二重循环：解析csv，分词并写入数据最后一个with语句：写入json 编写主程序新建main.py import json import jieba with open(\"trains/train.json\") as f: s = f.read() s = json.loads(s) name = input(\"垃圾名称：\\n\") name_jieba = list(jieba.cut(name, cut_all=True)) # 计算样本比例 w=0 w1=0 wd = [0,0,0,0] for i in s: for j in name_jieba: w+=1 if j in i[0]: w1+=1 wd[i[1]-1] += 1 wb = w1/w try: print(\"收录情况：%.4f%%\" % (wb * 100)) print(\"可回收垃圾概率：%.4f%%\" % ((wd[0] / w1) * 100)) print(\"干垃圾垃圾概率：%.4f%%\" % ((wd[1] / w1) * 100)) print(\"湿垃圾垃圾概率：%.4f%%\" % ((wd[2] / w1) * 100)) print(\"有害垃圾垃圾概率：%.4f%%\" % ((wd[3] / w1) * 100)) except ZeroDivisionError: print(\"暂时没有收录哦！\") 4-7行：读取训练集格式化后的json文件14-21行：计算概率22-30：输出结果 其实也没有用复杂算法，比较简单。 输出解释收录情况指该垃圾分词后的关键词占训练集总关键词的百分比。 类别的概率指该垃圾分词后的关键词在训练集中指定的垃圾在某类型的百分比 示例输入输出垃圾名称： 塑料 Building prefix dict from the default dictionary ... Loading model from cache C:\\Users\\mayn\\AppData\\Local\\Temp\\jieba.cache Loading model cost 0.622 seconds. Prefix dict has been built successfully. 收录情况：12.5000% 可回收垃圾概率：100.0000% 干垃圾垃圾概率：0.0000% 湿垃圾垃圾概率：0.0000% 有害垃圾垃圾概率：0.0000% 程序结束GithubGithub document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","raw":"---\ntitle: 使用Python打造自己的垃圾分类小程序\ntags: \n    - python\n    - 人工智能\ncategories: 计算机\n---\n# 环境搭建\n我们需要以下程序\n- PyCharm Community Edition 2020.2（可选）\n- Python 3\n\n\n# 创建自己的数据集\n新建一个目录`trains`,创建两个文件`train.csv`与`train.json`\n\n```\ntrains/\n    train.csv\n    train.json\n```\n\ntrain.json留空,train.csv写入以下内容\n```\n塑料袋,1\n塑料保鲜膜,1\n一次性餐具,2\n泥土,2\n黄瓜,3\n茄子,3\n白菜,3\n大豆,3\n中药残渣,3\n易拉罐,1\n花朵,3\n电池,4\n影像带,4\n荧光灯,4\n```\n\n>其中1代表**可回收垃圾**,2代表**干垃圾**(其他垃圾),3代表**湿垃圾**(厨余垃圾或易腐垃圾),4代表**有害垃圾**.\n\n# 1、格式化数据程序\n新建`formater.py`\n\n```\ntrains/\n    train.csv\n    train.json\nformater.py\n```\n\n## 安装jieba分词\n\n```\npip install jieba -i https://pypi.douban.com/simple/\n```\n\n如果出现`Successfully installed jieba-***`字样，表示安装成功，否则可能是网络问题\n> `https://pypi.douban.com/simple/`是豆瓣的镜像，如果使用默认镜像会超时\n\n### 示例\n```python\nimport jieba\ns = \"塑料保鲜膜\"\nprint(list(jieba.cut(s, cut_all=True)))\n```\n\n结果：\n```\nBuilding prefix dict from the default dictionary ...\nLoading model from cache C:\\Users\\mayn\\AppData\\Local\\Temp\\jieba.cache\nLoading model cost 0.615 seconds.\nPrefix dict has been built successfully.\n['塑料', '保鲜', '保鲜膜']\n```\n\n`jieba.cut`用来分词，cut_all参数用来指定是否使用“全分词”模式。\n\n[Jieba's Github](https://github.com/fxsjy/jieba)\n\n## 开始正式编写\n```python\nimport jieba\nimport json\n\n\ndef read(s: str):\n    data = []\n    for i in s.splitlines():\n        k = []\n        for j in i.split(\",\"):\n            k.append(j)\n        data.append(k)\n    return data\n\n\nwith open(\"trains/train.csv\", \"r\", encoding=\"utf-8\") as f:\n    s = f.read()\nprint(s)\ndata = read(s)\nprint(data)\njson_data = []\nfor i in data:\n    print(i)\n    field = i[0]\n    field_jieba = list(jieba.cut(field, cut_all=True))\n    json_data.append([field_jieba, int(i[1])])\n\nwith open(\"trains/train.json\", \"w\") as f:\n    s = json.dumps(json_data)\n    f.write(s)\n\n```\n\nread函数：读取csv函数\nfor二重循环：解析csv，分词并写入数据\n最后一个with语句：写入json\n\n# 编写主程序\n新建main.py\n```python\nimport json\nimport jieba\n\nwith open(\"trains/train.json\") as f:\n    s = f.read()\ns = json.loads(s)\n\nname = input(\"垃圾名称：\\n\")\nname_jieba = list(jieba.cut(name, cut_all=True))\n# 计算样本比例\nw=0\nw1=0\nwd = [0,0,0,0]\nfor i in s:\n    for j in name_jieba:\n        w+=1\n        if j in i[0]:\n            w1+=1\n            wd[i[1]-1] += 1\n\nwb = w1/w\ntry:\n    print(\"收录情况：%.4f%%\" % (wb * 100))\n    print(\"可回收垃圾概率：%.4f%%\" % ((wd[0] / w1) * 100))\n    print(\"干垃圾垃圾概率：%.4f%%\" % ((wd[1] / w1) * 100))\n    print(\"湿垃圾垃圾概率：%.4f%%\" % ((wd[2] / w1) * 100))\n    print(\"有害垃圾垃圾概率：%.4f%%\" % ((wd[3] / w1) * 100))\nexcept ZeroDivisionError:\n    print(\"暂时没有收录哦！\")\n\n```\n4-7行：读取训练集格式化后的json文件\n14-21行：计算概率\n22-30：输出结果\n\n其实也没有用复杂算法，比较简单。\n\n## 输出解释\n\n### 收录情况\n\n指该垃圾分词后的关键词占训练集总关键词的百分比。\n\n## 类别的概率\n\n指该垃圾分词后的关键词在训练集中指定的垃圾在某类型的百分比\n\n## 示例输入输出\n```\n垃圾名称：\n塑料\nBuilding prefix dict from the default dictionary ...\nLoading model from cache C:\\Users\\mayn\\AppData\\Local\\Temp\\jieba.cache\nLoading model cost 0.622 seconds.\nPrefix dict has been built successfully.\n收录情况：12.5000%\n可回收垃圾概率：100.0000%\n干垃圾垃圾概率：0.0000%\n湿垃圾垃圾概率：0.0000%\n有害垃圾垃圾概率：0.0000%\n程序结束\n```\n\n# Github\n[Github](https://github.com/XieZheyuan/waste-classifier)","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css\"><h1 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h1><p>我们需要以下程序</p>\n<ul>\n<li>PyCharm Community Edition 2020.2（可选）</li>\n<li>Python 3</li>\n</ul>\n<h1 id=\"创建自己的数据集\"><a href=\"#创建自己的数据集\" class=\"headerlink\" title=\"创建自己的数据集\"></a>创建自己的数据集</h1><p>新建一个目录<code>trains</code>,创建两个文件<code>train.csv</code>与<code>train.json</code></p>\n<pre><code>trains/\n    train.csv\n    train.json</code></pre><p>train.json留空,train.csv写入以下内容</p>\n<pre><code>塑料袋,1\n塑料保鲜膜,1\n一次性餐具,2\n泥土,2\n黄瓜,3\n茄子,3\n白菜,3\n大豆,3\n中药残渣,3\n易拉罐,1\n花朵,3\n电池,4\n影像带,4\n荧光灯,4</code></pre><blockquote>\n<p>其中1代表<strong>可回收垃圾</strong>,2代表<strong>干垃圾</strong>(其他垃圾),3代表<strong>湿垃圾</strong>(厨余垃圾或易腐垃圾),4代表<strong>有害垃圾</strong>.</p>\n</blockquote>\n<h1 id=\"1、格式化数据程序\"><a href=\"#1、格式化数据程序\" class=\"headerlink\" title=\"1、格式化数据程序\"></a>1、格式化数据程序</h1><p>新建<code>formater.py</code></p>\n<pre><code>trains/\n    train.csv\n    train.json\nformater.py</code></pre><h2 id=\"安装jieba分词\"><a href=\"#安装jieba分词\" class=\"headerlink\" title=\"安装jieba分词\"></a>安装jieba分词</h2><pre><code>pip install jieba -i https://pypi.douban.com/simple/</code></pre><p>如果出现<code>Successfully installed jieba-***</code>字样，表示安装成功，否则可能是网络问题</p>\n<blockquote>\n<p><code>https://pypi.douban.com/simple/</code>是豆瓣的镜像，如果使用默认镜像会超时</p>\n</blockquote>\n<h3 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h3><pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> jieba\ns <span class=\"token operator\">=</span> <span class=\"token string\">\"塑料保鲜膜\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">(</span>jieba<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> cut_all<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n<p>结果：</p>\n<pre><code>Building prefix dict from the default dictionary ...\nLoading model from cache C:\\Users\\mayn\\AppData\\Local\\Temp\\jieba.cache\nLoading model cost 0.615 seconds.\nPrefix dict has been built successfully.\n['塑料', '保鲜', '保鲜膜']</code></pre><p><code>jieba.cut</code>用来分词，cut_all参数用来指定是否使用“全分词”模式。</p>\n<p><a href=\"https://github.com/fxsjy/jieba\" target=\"_blank\" rel=\"noopener\">Jieba’s Github</a></p>\n<h2 id=\"开始正式编写\"><a href=\"#开始正式编写\" class=\"headerlink\" title=\"开始正式编写\"></a>开始正式编写</h2><pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> jieba\n<span class=\"token keyword\">import</span> json\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">:</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        k <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> i<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            k<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\n        data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> data\n\n\n<span class=\"token keyword\">with</span> open<span class=\"token punctuation\">(</span><span class=\"token string\">\"trains/train.csv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    s <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> read<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\njson_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    field <span class=\"token operator\">=</span> i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    field_jieba <span class=\"token operator\">=</span> list<span class=\"token punctuation\">(</span>jieba<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">,</span> cut_all<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    json_data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>field_jieba<span class=\"token punctuation\">,</span> int<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> open<span class=\"token punctuation\">(</span><span class=\"token string\">\"trains/train.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    s <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>json_data<span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>read函数：读取csv函数<br>for二重循环：解析csv，分词并写入数据<br>最后一个with语句：写入json</p>\n<h1 id=\"编写主程序\"><a href=\"#编写主程序\" class=\"headerlink\" title=\"编写主程序\"></a>编写主程序</h1><p>新建main.py</p>\n<pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> jieba\n\n<span class=\"token keyword\">with</span> open<span class=\"token punctuation\">(</span><span class=\"token string\">\"trains/train.json\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    s <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\nname <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token string\">\"垃圾名称：\\n\"</span><span class=\"token punctuation\">)</span>\nname_jieba <span class=\"token operator\">=</span> list<span class=\"token punctuation\">(</span>jieba<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> cut_all<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\" spellcheck=\"true\"># 计算样本比例</span>\nw<span class=\"token operator\">=</span><span class=\"token number\">0</span>\nw1<span class=\"token operator\">=</span><span class=\"token number\">0</span>\nwd <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> name_jieba<span class=\"token punctuation\">:</span>\n        w<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> j <span class=\"token keyword\">in</span> i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            w1<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n            wd<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\nwb <span class=\"token operator\">=</span> w1<span class=\"token operator\">/</span>w\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"收录情况：%.4f%%\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>wb <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"可回收垃圾概率：%.4f%%\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>wd<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> w1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"干垃圾垃圾概率：%.4f%%\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>wd<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> w1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"湿垃圾垃圾概率：%.4f%%\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>wd<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> w1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"有害垃圾垃圾概率：%.4f%%\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>wd<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> w1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ZeroDivisionError<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"暂时没有收录哦！\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>4-7行：读取训练集格式化后的json文件<br>14-21行：计算概率<br>22-30：输出结果</p>\n<p>其实也没有用复杂算法，比较简单。</p>\n<h2 id=\"输出解释\"><a href=\"#输出解释\" class=\"headerlink\" title=\"输出解释\"></a>输出解释</h2><h3 id=\"收录情况\"><a href=\"#收录情况\" class=\"headerlink\" title=\"收录情况\"></a>收录情况</h3><p>指该垃圾分词后的关键词占训练集总关键词的百分比。</p>\n<h2 id=\"类别的概率\"><a href=\"#类别的概率\" class=\"headerlink\" title=\"类别的概率\"></a>类别的概率</h2><p>指该垃圾分词后的关键词在训练集中指定的垃圾在某类型的百分比</p>\n<h2 id=\"示例输入输出\"><a href=\"#示例输入输出\" class=\"headerlink\" title=\"示例输入输出\"></a>示例输入输出</h2><pre><code>垃圾名称：\n塑料\nBuilding prefix dict from the default dictionary ...\nLoading model from cache C:\\Users\\mayn\\AppData\\Local\\Temp\\jieba.cache\nLoading model cost 0.622 seconds.\nPrefix dict has been built successfully.\n收录情况：12.5000%\n可回收垃圾概率：100.0000%\n干垃圾垃圾概率：0.0000%\n湿垃圾垃圾概率：0.0000%\n有害垃圾垃圾概率：0.0000%\n程序结束</code></pre><h1 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h1><p><a href=\"https://github.com/XieZheyuan/waste-classifier\" target=\"_blank\" rel=\"noopener\">Github</a></p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","tags":[{"name":"python","slug":"python","permalink":"http://xiezheyuan.top/tags/python/"},{"name":"人工智能","slug":"人工智能","permalink":"http://xiezheyuan.top/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"}]},{"title":"为hexo添加echarts,mathjax,mermaid等","date":"2020-08-19T10:33:52.895Z","path":"2020/08/19/hexo-add-mathjax-mermaid-echarts/","text":"EchartsEcharts 介绍Echarts 是开源电子图表HTML引擎 。 Echarts 示例(HTML)本实例来自 Echarts官网 &lt;!DOCTYPE html> &lt;html> &lt;head> &lt;meta charset=\"utf-8\"> &lt;title>ECharts&lt;/title> &lt;!-- 引入 echarts.js --> &lt;script src=\"echarts.min.js\">&lt;/script> &lt;/head> &lt;body> &lt;!-- 为ECharts准备一个具备大小（宽高）的Dom --> &lt;div id=\"main\" style=\"width: 600px;height:400px;\">&lt;/div> &lt;script type=\"text/javascript\"> // 基于准备好的dom，初始化echarts实例 var myChart = echarts.init(document.getElementById('main')); // 指定图表的配置项和数据 var option = { title: { text: 'ECharts 入门示例' }, tooltip: {}, legend: { data:['销量'] }, xAxis: { data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"] }, yAxis: {}, series: [{ name: '销量', type: 'bar', data: [5, 20, 36, 10, 10, 20] }] }; // 使用刚指定的配置项和数据显示图表。 myChart.setOption(option); &lt;/script> &lt;/body> &lt;/html> // 基于准备好的dom，初始化echarts实例 var myChart = echarts.init(document.getElementById('echarts1627')); // 指定图表的配置项和数据 var option = { title: { text: 'ECharts 入门示例' }, tooltip: {}, legend: { data:['销量'] }, xAxis: { data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"] }, yAxis: {}, series: [{ name: '销量', type: 'bar', data: [5, 20, 36, 10, 10, 20] }] } // 使用刚指定的配置项和数据显示图表。 myChart.setOption(option); 安装插件npm install --save hexo-tag-echarts3 使用将option属性的粘贴到xx处 # 实例 {% echarts 400 '85%' %} xx {%endecharts%} 比如 {% echarts 400 '85%' %} { title: { text: 'ECharts 入门示例' }, tooltip: {}, legend: { data:['销量'] }, xAxis: { data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"] }, yAxis: {}, series: [{ name: '销量', type: 'bar', data: [5, 20, 36, 10, 10, 20] }] } {%endecharts%} 其中400是高度(height),'85%'是宽度(width) MathjaxLaTex &amp; MathjaxMathjax是基于LaTex的数学公式渲染JavaScript脚本 配置在footer中添加 &lt;script src=\"https://cdn.bootcss.com/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">&lt;/script> &lt;script type=\"text/x-mathjax-config\"> MathJax.Hub.Config({ showProcessingMessages: false, //关闭js加载过程信息 messageStyle: \"none\", //不显示信息 extensions: [\"tex2jax.js\"], jax: [\"input/TeX\", \"output/HTML-CSS\"], tex2jax: { inlineMath: [ ['$','$'], [\"\\\\(\",\"\\\\)\"] ], //行内公式选择符 displayMath: [ ['$$','$$'], [\"\\\\[\",\"\\\\]\"] ], //段内公式选择符 skipTags: ['script', 'noscript', 'style', 'textarea', 'pre','code','a'], //避开某些标签 ignoreClass:\"comment-content\"|\"head-class\" //避开含该Class的标签，用|隔开 }, \"HTML-CSS\": { availableFonts: [\"STIX\",\"TeX\"], //可选字体 showMathMenu: false //关闭右击菜单显示 } }); MathJax.Hub.Queue([\"Typeset\",MathJax.Hub]); &lt;/script> &lt;style> .MathJax_Display{overflow-x:auto;overflow-y:hidden;} .MathJax{outline:0;} &lt;/style> 来源不知道是哪位大神，请在评论区认领！ 之后试一试在posts中写这个 $$ S = \\pi \\times r^2 $$ $$S = \\pi \\times r^2$$ MermaidMermaid配置看这个：https://blog.csdn.net/Olivia_Vang/article/details/92987859 Mermaid实现 graph TB; A--Hello World-->B B-.->C A==>C graph BT; A--Hello World-->B B-.->C A==>C graph LR; A--Hello World-->B B-.->C A==>C graph RL; A--Hello World-->B B-.->C A==>C sequenceDiagram participant a as Billy participant b as Ely loop Everyday a->>b: Hello! a-->>b: Hello!Are you have a lot of money? activate a Note left of a: Think a moment alt Have a-xb: I got it! else Havn't a-xb: No! end opt Near the Holiday a-->b: Good holiday! end en graph TB; A--Hello World--&gt;B B-.-&gt;C A==&gt;C graph BT; A--Hello World--&gt;B B-.-&gt;C A==&gt;C graph LR; A--Hello World--&gt;B B-.-&gt;C A==&gt;C graph RL; A--Hello World--&gt;B B-.-&gt;C A==&gt;C sequenceDiagram participant a as Billy participant b as Ely loop Everyday a-&gt;&gt;b: Hello! a--&gt;&gt;b: Hello!Are you have a lot of money? activate a Note left of a: Think a moment alt Have a-xb: I got it! else Havn't a-xb: No! end opt Near the Holiday a--&gt;b: Good holiday! end end 参考：https://blog.csdn.net/fenghuizhidao/article/details/79440583 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","raw":"---\ntitle: 为hexo添加echarts,mathjax,mermaid等\ntags: \n\t- hexo\n\t- html\ncategories: 计算机\n---\n# Echarts \n\n## Echarts 介绍\n\n[Echarts ](https://echarts.apache.org) 是开源电子图表HTML引擎    。\n\n## Echarts 示例(HTML)\n\n本实例来自 [Echarts官网](https://echarts.apache.org/zh/tutorial.html#5%20%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B%20ECharts)\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>ECharts</title>\n    <!-- 引入 echarts.js -->\n    <script src=\"echarts.min.js\"></script>\n</head>\n<body>\n    <!-- 为ECharts准备一个具备大小（宽高）的Dom -->\n    <div id=\"main\" style=\"width: 600px;height:400px;\"></div>\n    <script type=\"text/javascript\">\n        // 基于准备好的dom，初始化echarts实例\n        var myChart = echarts.init(document.getElementById('main'));\n\n        // 指定图表的配置项和数据\n        var option = {\n            title: {\n                text: 'ECharts 入门示例'\n            },\n            tooltip: {},\n            legend: {\n                data:['销量']\n            },\n            xAxis: {\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\n            },\n            yAxis: {},\n            series: [{\n                name: '销量',\n                type: 'bar',\n                data: [5, 20, 36, 10, 10, 20]\n            }]\n        };\n\n        // 使用刚指定的配置项和数据显示图表。\n        myChart.setOption(option);\n    </script>\n</body>\n</html>\n```\n\n{% echarts 400 '85%' %}\n{\n            title: {\n                text: 'ECharts 入门示例'\n            },\n            tooltip: {},\n            legend: {\n                data:['销量']\n            },\n            xAxis: {\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\n            },\n            yAxis: {},\n            series: [{\n                name: '销量',\n                type: 'bar',\n                data: [5, 20, 36, 10, 10, 20]\n            }]\n        }\n {%endecharts%}\n\n \n## 安装插件\n```powershell\nnpm install --save hexo-tag-echarts3 \n```\n\n## 使用\n将option属性的粘贴到xx处\n```markdown\n# 实例\n{% echarts 400 '85%' %}\nxx\n {%endecharts%}\n```\n比如\n```markdown\n{% echarts 400 '85%' %}\n{\n            title: {\n                text: 'ECharts 入门示例'\n            },\n            tooltip: {},\n            legend: {\n                data:['销量']\n            },\n            xAxis: {\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\n            },\n            yAxis: {},\n            series: [{\n                name: '销量',\n                type: 'bar',\n                data: [5, 20, 36, 10, 10, 20]\n            }]\n        }\n {%endecharts%}\n```\n其中`400`是高度(height),`'85%'`是宽度(width)\n\n\n# Mathjax\n## LaTex & Mathjax\nMathjax是基于LaTex的数学公式渲染JavaScript脚本\n## 配置\n在footer中添加\n\n```html\n<script src=\"https://cdn.bootcss.com/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"></script>\n<script type=\"text/x-mathjax-config\">\nMathJax.Hub.Config({\n    showProcessingMessages: false, //关闭js加载过程信息\n    messageStyle: \"none\", //不显示信息\n    extensions: [\"tex2jax.js\"],\n    jax: [\"input/TeX\", \"output/HTML-CSS\"],\n    tex2jax: {\n        inlineMath: [ ['$','$'], [\"\\\\(\",\"\\\\)\"] ], //行内公式选择符\n        displayMath: [ ['$$','$$'], [\"\\\\[\",\"\\\\]\"] ], //段内公式选择符\n        skipTags: ['script', 'noscript', 'style', 'textarea', 'pre','code','a'], //避开某些标签\n        ignoreClass:\"comment-content\"|\"head-class\" //避开含该Class的标签，用|隔开\n    },\n    \"HTML-CSS\": {\n        availableFonts: [\"STIX\",\"TeX\"], //可选字体\n        showMathMenu: false //关闭右击菜单显示\n    }\n});\nMathJax.Hub.Queue([\"Typeset\",MathJax.Hub]);\n</script>\n<style>\n    \n    .MathJax_Display{overflow-x:auto;overflow-y:hidden;}\n    .MathJax{outline:0;}\n</style>\n```\n> 来源不知道是哪位大神，请在评论区认领！\n\n\n之后试一试在posts中写这个\n\n```markdown\n$$\nS = \\pi \\times r^2\n$$\n```\n\n$$\nS = \\pi \\times r^2\n$$\n\n# Mermaid\n\n## Mermaid配置\n看这个：https://blog.csdn.net/Olivia_Vang/article/details/92987859\n\n## Mermaid实现\n```markdown\n\ngraph TB;\n   A--Hello World-->B\n   B-.->C\n   A==>C\n\n\ngraph BT;\n   A--Hello World-->B\n   B-.->C\n   A==>C\n\n \ngraph LR;\n   A--Hello World-->B\n   B-.->C\n   A==>C\n\n \ngraph RL;\n   A--Hello World-->B\n   B-.->C\n   A==>C\n\nsequenceDiagram\n    participant a as Billy\n    participant b as Ely\n    loop Everyday\n        a->>b: Hello!\n        a-->>b: Hello!Are you have a lot of money?\n        activate a\n        Note left of a: Think a moment\n        alt Have\n            a-xb: I got it!\n        else Havn't\n            a-xb: No!\n        end\n        opt Near the Holiday\n            a-->b: Good holiday!\n        end\n    en\n\n```\n<div class=\"firstTest mermaid\">\ngraph TB;\n   A--Hello World-->B\n   B-.->C\n   A==>C\n</div>\n<div class=\"firstTest mermaid\">\ngraph BT;\n   A--Hello World-->B\n   B-.->C\n   A==>C\n    </div>\n <div class=\"firstTest mermaid\">\ngraph LR;\n   A--Hello World-->B\n   B-.->C\n   A==>C\n    </div>\n <div class=\"firstTest mermaid\">\ngraph RL;\n   A--Hello World-->B\n   B-.->C\n   A==>C\n    </div>\n   <div class=\"firstTest mermaid\">\n   \tsequenceDiagram\n    participant a as Billy\n    participant b as Ely\n    loop Everyday\n        a->>b: Hello!\n        a-->>b: Hello!Are you have a lot of money?\n        activate a\n        Note left of a: Think a moment\n        alt Have\n            a-xb: I got it!\n        else Havn't\n            a-xb: No!\n        end\n        opt Near the Holiday\n            a-->b: Good holiday!\n        end\n    end\n   </div>\n\n参考：https://blog.csdn.net/fenghuizhidao/article/details/79440583\n\n","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css\"><h1 id=\"Echarts\"><a href=\"#Echarts\" class=\"headerlink\" title=\"Echarts\"></a>Echarts</h1><h2 id=\"Echarts-介绍\"><a href=\"#Echarts-介绍\" class=\"headerlink\" title=\"Echarts 介绍\"></a>Echarts 介绍</h2><p><a href=\"https://echarts.apache.org\" target=\"_blank\" rel=\"noopener\">Echarts </a> 是开源电子图表HTML引擎    。</p>\n<h2 id=\"Echarts-示例-HTML\"><a href=\"#Echarts-示例-HTML\" class=\"headerlink\" title=\"Echarts 示例(HTML)\"></a>Echarts 示例(HTML)</h2><p>本实例来自 <a href=\"https://echarts.apache.org/zh/tutorial.html#5%20%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B%20ECharts\" target=\"_blank\" rel=\"noopener\">Echarts官网</a></p>\n<pre class=\" language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>ECharts<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\" spellcheck=\"true\">&lt;!-- 引入 echarts.js --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>echarts.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\" spellcheck=\"true\">&lt;!-- 为ECharts准备一个具备大小（宽高）的Dom --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">600</span>px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span><span class=\"token number\">400</span>px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n        <span class=\"token comment\" spellcheck=\"true\">// 基于准备好的dom，初始化echarts实例</span>\n        <span class=\"token keyword\">var</span> myChart <span class=\"token operator\">=</span> echarts<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// 指定图表的配置项和数据</span>\n        <span class=\"token keyword\">var</span> option <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            title<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                text<span class=\"token punctuation\">:</span> <span class=\"token string\">'ECharts 入门示例'</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            tooltip<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            legend<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                data<span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">'销量'</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            xAxis<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"衬衫\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"羊毛衫\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"雪纺衫\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"裤子\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"高跟鞋\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"袜子\"</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            yAxis<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            series<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n                name<span class=\"token punctuation\">:</span> <span class=\"token string\">'销量'</span><span class=\"token punctuation\">,</span>\n                type<span class=\"token punctuation\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span>\n                data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// 使用刚指定的配置项和数据显示图表。</span>\n        myChart<span class=\"token punctuation\">.</span><span class=\"token function\">setOption</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<div id=\"echarts1627\" style=\"width: 85%;height: 400px;margin: 0 auto\"></div>\n\n<script src=\"https://cdn.bootcss.com/echarts/3.8.0/echarts.common.min.js\"></script>\n<script type=\"text/javascript\">\n        // 基于准备好的dom，初始化echarts实例\n        var myChart = echarts.init(document.getElementById('echarts1627'));\n        // 指定图表的配置项和数据\n        var option = {\n            title: {\n                text: 'ECharts 入门示例'\n            },\n            tooltip: {},\n            legend: {\n                data:['销量']\n            },\n            xAxis: {\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\n            },\n            yAxis: {},\n            series: [{\n                name: '销量',\n                type: 'bar',\n                data: [5, 20, 36, 10, 10, 20]\n            }]\n        }\n \n        // 使用刚指定的配置项和数据显示图表。\n        myChart.setOption(option);\n</script>\n\n\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><pre class=\" language-powershell\"><code class=\"language-powershell\">npm install <span class=\"token operator\">--</span>save hexo<span class=\"token operator\">-</span>tag<span class=\"token operator\">-</span>echarts3 </code></pre>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>将option属性的粘贴到xx处</p>\n<pre class=\" language-markdown\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">#</span> 实例</span>\n{% echarts 400 '85%' %}\nxx\n {%endecharts%}</code></pre>\n<p>比如</p>\n<pre class=\" language-markdown\"><code class=\"language-markdown\">{% echarts 400 '85%' %}\n{\n<span class=\"token code keyword\">            title: {</span>\n<span class=\"token code keyword\">                text: 'ECharts 入门示例'</span>\n<span class=\"token code keyword\">            },</span>\n<span class=\"token code keyword\">            tooltip: {},</span>\n<span class=\"token code keyword\">            legend: {</span>\n<span class=\"token code keyword\">                data:['销量']</span>\n<span class=\"token code keyword\">            },</span>\n<span class=\"token code keyword\">            xAxis: {</span>\n<span class=\"token code keyword\">                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]</span>\n<span class=\"token code keyword\">            },</span>\n<span class=\"token code keyword\">            yAxis: {},</span>\n<span class=\"token code keyword\">            series: [{</span>\n<span class=\"token code keyword\">                name: '销量',</span>\n<span class=\"token code keyword\">                type: 'bar',</span>\n<span class=\"token code keyword\">                data: [5, 20, 36, 10, 10, 20]</span>\n<span class=\"token code keyword\">            }]</span>\n<span class=\"token code keyword\">        }</span>\n {%endecharts%}</code></pre>\n<p>其中<code>400</code>是高度(height),<code>'85%'</code>是宽度(width)</p>\n<h1 id=\"Mathjax\"><a href=\"#Mathjax\" class=\"headerlink\" title=\"Mathjax\"></a>Mathjax</h1><h2 id=\"LaTex-amp-Mathjax\"><a href=\"#LaTex-amp-Mathjax\" class=\"headerlink\" title=\"LaTex &amp; Mathjax\"></a>LaTex &amp; Mathjax</h2><p>Mathjax是基于LaTex的数学公式渲染JavaScript脚本</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>在footer中添加</p>\n<pre class=\" language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://cdn.bootcss.com/mathjax/2.7.5/MathJax.js?config<span class=\"token punctuation\">=</span>TeX-AMS-MML_HTMLorMML<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text/x-mathjax-config<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\nMathJax<span class=\"token punctuation\">.</span>Hub<span class=\"token punctuation\">.</span><span class=\"token function\">Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    showProcessingMessages<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\" spellcheck=\"true\">//关闭js加载过程信息</span>\n    messageStyle<span class=\"token punctuation\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\" spellcheck=\"true\">//不显示信息</span>\n    extensions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tex2jax.js\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    jax<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"input/TeX\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"output/HTML-CSS\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    tex2jax<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        inlineMath<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'$'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'$'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\\\\(\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\\\)\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\" spellcheck=\"true\">//行内公式选择符</span>\n        displayMath<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'$$'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'$$'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"\\\\[\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\\\\]\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\" spellcheck=\"true\">//段内公式选择符</span>\n        skipTags<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'noscript'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'textarea'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pre'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'code'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\" spellcheck=\"true\">//避开某些标签</span>\n        ignoreClass<span class=\"token punctuation\">:</span><span class=\"token string\">\"comment-content\"</span><span class=\"token operator\">|</span><span class=\"token string\">\"head-class\"</span> <span class=\"token comment\" spellcheck=\"true\">//避开含该Class的标签，用|隔开</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"HTML-CSS\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        availableFonts<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"STIX\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"TeX\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\" spellcheck=\"true\">//可选字体</span>\n        showMathMenu<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token comment\" spellcheck=\"true\">//关闭右击菜单显示</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nMathJax<span class=\"token punctuation\">.</span>Hub<span class=\"token punctuation\">.</span><span class=\"token function\">Queue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"Typeset\"</span><span class=\"token punctuation\">,</span>MathJax<span class=\"token punctuation\">.</span>Hub<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style language-css\">\n\n    <span class=\"token selector\"><span class=\"token class\">.MathJax_Display</span></span><span class=\"token punctuation\">{</span><span class=\"token property\">overflow-x</span><span class=\"token punctuation\">:</span>auto<span class=\"token punctuation\">;</span><span class=\"token property\">overflow-y</span><span class=\"token punctuation\">:</span>hidden<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token selector\"><span class=\"token class\">.MathJax</span></span><span class=\"token punctuation\">{</span><span class=\"token property\">outline</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></code></pre>\n<blockquote>\n<p>来源不知道是哪位大神，请在评论区认领！</p>\n</blockquote>\n<p>之后试一试在posts中写这个</p>\n<pre class=\" language-markdown\"><code class=\"language-markdown\">$$\nS = \\pi \\times r^2\n$$</code></pre>\n<p>$$<br>S = \\pi \\times r^2<br>$$</p>\n<h1 id=\"Mermaid\"><a href=\"#Mermaid\" class=\"headerlink\" title=\"Mermaid\"></a>Mermaid</h1><h2 id=\"Mermaid配置\"><a href=\"#Mermaid配置\" class=\"headerlink\" title=\"Mermaid配置\"></a>Mermaid配置</h2><p>看这个：<a href=\"https://blog.csdn.net/Olivia_Vang/article/details/92987859\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/Olivia_Vang/article/details/92987859</a></p>\n<h2 id=\"Mermaid实现\"><a href=\"#Mermaid实现\" class=\"headerlink\" title=\"Mermaid实现\"></a>Mermaid实现</h2><pre class=\" language-markdown\"><code class=\"language-markdown\">\ngraph TB;\n   A--Hello World-->B\n   B-.->C\n   A==>C\n\n\ngraph BT;\n   A--Hello World-->B\n   B-.->C\n   A==>C\n\n\ngraph LR;\n   A--Hello World-->B\n   B-.->C\n   A==>C\n\n\ngraph RL;\n   A--Hello World-->B\n   B-.->C\n   A==>C\n\nsequenceDiagram\n<span class=\"token code keyword\">    participant a as Billy</span>\n<span class=\"token code keyword\">    participant b as Ely</span>\n<span class=\"token code keyword\">    loop Everyday</span>\n<span class=\"token code keyword\">        a->>b: Hello!</span>\n<span class=\"token code keyword\">        a-->>b: Hello!Are you have a lot of money?</span>\n<span class=\"token code keyword\">        activate a</span>\n<span class=\"token code keyword\">        Note left of a: Think a moment</span>\n<span class=\"token code keyword\">        alt Have</span>\n<span class=\"token code keyword\">            a-xb: I got it!</span>\n<span class=\"token code keyword\">        else Havn't</span>\n<span class=\"token code keyword\">            a-xb: No!</span>\n<span class=\"token code keyword\">        end</span>\n<span class=\"token code keyword\">        opt Near the Holiday</span>\n<span class=\"token code keyword\">            a-->b: Good holiday!</span>\n<span class=\"token code keyword\">        end</span>\n<span class=\"token code keyword\">    en</span>\n</code></pre>\n<div class=\"firstTest mermaid\">\ngraph TB;\n   A--Hello World--&gt;B\n   B-.-&gt;C\n   A==&gt;C\n</div>\n<div class=\"firstTest mermaid\">\ngraph BT;\n   A--Hello World--&gt;B\n   B-.-&gt;C\n   A==&gt;C\n    </div>\n <div class=\"firstTest mermaid\">\ngraph LR;\n   A--Hello World--&gt;B\n   B-.-&gt;C\n   A==&gt;C\n    </div>\n <div class=\"firstTest mermaid\">\ngraph RL;\n   A--Hello World--&gt;B\n   B-.-&gt;C\n   A==&gt;C\n    </div>\n   <div class=\"firstTest mermaid\">\n       sequenceDiagram\n    participant a as Billy\n    participant b as Ely\n    loop Everyday\n        a-&gt;&gt;b: Hello!\n        a--&gt;&gt;b: Hello!Are you have a lot of money?\n        activate a\n        Note left of a: Think a moment\n        alt Have\n            a-xb: I got it!\n        else Havn't\n            a-xb: No!\n        end\n        opt Near the Holiday\n            a--&gt;b: Good holiday!\n        end\n    end\n   </div>\n\n<p>参考：<a href=\"https://blog.csdn.net/fenghuizhidao/article/details/79440583\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/fenghuizhidao/article/details/79440583</a></p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","tags":[{"name":"hexo","slug":"hexo","permalink":"http://xiezheyuan.top/tags/hexo/"},{"name":"html","slug":"html","permalink":"http://xiezheyuan.top/tags/html/"}]},{"title":"有关冰雹猜想的那些想法","date":"2020-08-18T10:34:24.143Z","path":"2020/08/18/ice-strom-guess-something/","text":"1、什么是冰雹猜想 冰雹猜想是指：一个正整数x，如果是奇数就乘以3再加1，如果是偶数就析出偶数因数2ⁿ，这样经过若干个次数，最终回到1。百度百科 1.1 冰雹猜想实例-&gt;15 graph TB; 15(开始) --&gt; 15*3+1=46 15*3+1=46--&gt;46/2=23; 46/2=23--&gt;23*3+1=70; 23*3+1=70--&gt;70/2=35; 70/2=35--&gt;35*3+1=106; 35*3+1=106--&gt;106/2=53 106/2=53--&gt;53*3+1=160 53*3+1=160--&gt;160/2=80 160/2=80 --&gt; 80/2=40 80/2=40 --&gt; 40/2=20 40/2=20 --&gt;20/2=10 10/2=5 --&gt; 5*3+1=16 5*3+1=16 --&gt; 16/2=8 16/2=8--&gt;8/2=4 8/2=4--&gt;4/2=2 4/2=2--&gt;2/2=1 2/2=1 --&gt; 1(完成) 2.关于冰雹反推树（Collatz Conjecture Reversed Tree)冰雹反推树是我提出来的一项方法，有帮助证明的作用。 2.1 过程 第一个节点为1 子节点（左）： 父节点*2 子节点（右）： (父节点-1)/3 (如果为小数就不写) $$firstparent = 1$$$$subleft = parent \\times 2$$$$subright = \\frac {(parent - 1)} {3}$$ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","raw":"---\ntitle: 有关冰雹猜想的那些想法\ntags: 角谷猜想\ncategories: 数学\n---\n# 1、什么是冰雹猜想\n> 冰雹猜想是指：一个正整数x，如果是奇数就乘以3再加1，如果是偶数就析出偶数因数2ⁿ，这样经过若干个次数，最终回到1。\n> [百度百科](https://baike.baidu.com/item/%E5%86%B0%E9%9B%B9%E7%8C%9C%E6%83%B3/659469)\n\n\n## 1.1 冰雹猜想实例->15\n<div class=\"firstTest mermaid\">\n       graph TB;\n        15(开始) --> 15*3+1=46\n\t15*3+1=46-->46/2=23;\n\t46/2=23-->23*3+1=70;\n\t23*3+1=70-->70/2=35;\n\t70/2=35-->35*3+1=106; \n\t35*3+1=106-->106/2=53\n\t106/2=53-->53*3+1=160\n\t53*3+1=160-->160/2=80\n\t160/2=80 --> 80/2=40\n\t80/2=40 --> 40/2=20\n\t40/2=20 -->20/2=10\n\t10/2=5 --> 5*3+1=16\n\t5*3+1=16 --> 16/2=8\n\t16/2=8-->8/2=4\n\t8/2=4-->4/2=2\n\t\t4/2=2-->2/2=1\n2/2=1 --> 1(完成)\n    </div>\n<!--\n![点击下方链接查看](/blogimages/ice-strom-15.png)\n[点击链接-查看高清图片（外链）](https://flowchart.airmore.cn/doc/b74c775d37992b4dbe68987c0070cbe7)-->\n\n# 2.关于冰雹反推树（Collatz Conjecture　Reversed Tree)\n\n**冰雹反推树**是我提出来的**一项方法**，有**帮助证明**的作用。\n\n\n## 2.1 过程\n![冰雹反推树](/blogimages/ice-strom-tree-64-30.png)\n- 第一个节点为1\n- 子节点（左）： 父节点*2\n- 子节点（右）： (父节点-1)/3 (如果为小数就不写)\n\n$$\nfirstparent = 1\n$$\n$$\nsubleft = parent \\times 2\n$$\n$$\nsubright = \\frac {(parent - 1)} {3}\n$$\n\n","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css\"><h1 id=\"1、什么是冰雹猜想\"><a href=\"#1、什么是冰雹猜想\" class=\"headerlink\" title=\"1、什么是冰雹猜想\"></a>1、什么是冰雹猜想</h1><blockquote>\n<p>冰雹猜想是指：一个正整数x，如果是奇数就乘以3再加1，如果是偶数就析出偶数因数2ⁿ，这样经过若干个次数，最终回到1。<br><a href=\"https://baike.baidu.com/item/%E5%86%B0%E9%9B%B9%E7%8C%9C%E6%83%B3/659469\" target=\"_blank\" rel=\"noopener\">百度百科</a></p>\n</blockquote>\n<h2 id=\"1-1-冰雹猜想实例-gt-15\"><a href=\"#1-1-冰雹猜想实例-gt-15\" class=\"headerlink\" title=\"1.1 冰雹猜想实例->15\"></a>1.1 冰雹猜想实例-&gt;15</h2><div class=\"firstTest mermaid\">\n       graph TB;\n        15(开始) --&gt; 15*3+1=46\n    15*3+1=46--&gt;46/2=23;\n    46/2=23--&gt;23*3+1=70;\n    23*3+1=70--&gt;70/2=35;\n    70/2=35--&gt;35*3+1=106; \n    35*3+1=106--&gt;106/2=53\n    106/2=53--&gt;53*3+1=160\n    53*3+1=160--&gt;160/2=80\n    160/2=80 --&gt; 80/2=40\n    80/2=40 --&gt; 40/2=20\n    40/2=20 --&gt;20/2=10\n    10/2=5 --&gt; 5*3+1=16\n    5*3+1=16 --&gt; 16/2=8\n    16/2=8--&gt;8/2=4\n    8/2=4--&gt;4/2=2\n        4/2=2--&gt;2/2=1\n2/2=1 --&gt; 1(完成)\n    </div>\n<!--\n![点击下方链接查看](/blogimages/ice-strom-15.png)\n[点击链接-查看高清图片（外链）](https://flowchart.airmore.cn/doc/b74c775d37992b4dbe68987c0070cbe7)-->\n\n<h1 id=\"2-关于冰雹反推树（Collatz-Conjecture-Reversed-Tree\"><a href=\"#2-关于冰雹反推树（Collatz-Conjecture-Reversed-Tree\" class=\"headerlink\" title=\"2.关于冰雹反推树（Collatz Conjecture　Reversed Tree)\"></a>2.关于冰雹反推树（Collatz Conjecture　Reversed Tree)</h1><p><strong>冰雹反推树</strong>是我提出来的<strong>一项方法</strong>，有<strong>帮助证明</strong>的作用。</p>\n<h2 id=\"2-1-过程\"><a href=\"#2-1-过程\" class=\"headerlink\" title=\"2.1 过程\"></a>2.1 过程</h2><p><img src=\"/blogimages/ice-strom-tree-64-30.png\" alt=\"冰雹反推树\"></p>\n<ul>\n<li>第一个节点为1</li>\n<li>子节点（左）： 父节点*2</li>\n<li>子节点（右）： (父节点-1)/3 (如果为小数就不写)</li>\n</ul>\n<p>$$<br>firstparent = 1<br>$$<br>$$<br>subleft = parent \\times 2<br>$$<br>$$<br>subright = \\frac {(parent - 1)} {3}<br>$$</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","tags":[{"name":"角谷猜想","slug":"角谷猜想","permalink":"http://xiezheyuan.top/tags/%E8%A7%92%E8%B0%B7%E7%8C%9C%E6%83%B3/"}]},{"title":"1328：【例7.7】光荣的梦想题解","date":"2020-07-26T12:30:00.000Z","path":"2020/07/26/1328-dream-of-glory/","text":"题目：1328：【例7.7】光荣的梦想【题目描述】 Prince对他在这片大陆上维护的秩序感到满意，于是决定启程离开艾泽拉斯。在他动身之前，Prince决定赋予King_Bette最强大的能量以守护世界、保卫这里的平衡与和谐。在那个时代，平衡是个梦想。因为有很多奇异的物种拥有各种不稳定的能量，平衡瞬间即被打破。KB决定求助于你，帮助他完成这个梦想。 一串数列即表示一个世界的状态。 平衡是指这串数列以升序排列。而从一串无序数列到有序数列需要通过交换数列中的元素来实现。KB的能量只能交换相邻两个数字。他想知道他最少需要交换几次就能使数列有序。 【输入】 第一行为数列中数的个数n,第二行为n ≤ 10000个数。表示当前数列的状态。 【输出】 输出一个整数，表示最少需要交换几次能达到平衡状态。 【输入样例】 42 1 4 3 【输出样例】 2 题解：Linux风格C++代码#include&lt;iostream> #include&lt;cstring> using namespace std; int source[10005]; int ed[10005]; int n; int ans; void px(int start=0,int end=n-1) { if(end-start&lt;=0) { return; } int mid = (start+end)/2; px(start, mid); px(mid+1, end); int i=start,j=mid+1,cnt=start; while(i&lt;=mid&amp;&amp;j&lt;=end) { if(source[i]&lt;=source[j]) { ed[cnt]=source[i]; i++; } else { ans+=(mid+1-i); ed[cnt]=source[j]; j++; } cnt++; } if(i&lt;=mid) { for(int k=0; k&lt;=(mid-i); k++) { ed[cnt+k]=source[i+k]; } } if(j&lt;=end) { for(int l=0; l&lt;=(end-j); l++) { ed[cnt+l]=source[j+l]; } } while(i&lt;=mid) { ed[cnt++]=source[i++]; } while(j&lt;=end) { ed[cnt++]=source[j++]; } for(int i=start; i&lt;=end; i++) { source[i]=ed[i]; } } int main() { cin>>n; for(int i=0; i&lt;n; i++) { cin>>source[i]; } px(); cout&lt;&lt;ans; return 0; } Allman风格#include&lt;iostream> #include&lt;cstring> using namespace std; int source[10005]; int ed[10005]; int n; int ans; void px(int start=0,int end=n-1) { if(end-start&lt;=0) { return; } int mid = (start+end)/2; px(start, mid); px(mid+1, end); int i=start,j=mid+1,cnt=start; while(i&lt;=mid&amp;&amp;j&lt;=end) { if(source[i]&lt;=source[j]) { ed[cnt]=source[i]; i++; } else { ans+=(mid+1-i); ed[cnt]=source[j]; j++; } cnt++; } if(i&lt;=mid) { for(int k=0; k&lt;=(mid-i); k++) { ed[cnt+k]=source[i+k]; } } if(j&lt;=end) { for(int l=0; l&lt;=(end-j); l++) { ed[cnt+l]=source[j+l]; } } while(i&lt;=mid) { ed[cnt++]=source[i++]; } while(j&lt;=end) { ed[cnt++]=source[j++]; } for(int i=start; i&lt;=end; i++) { source[i]=ed[i]; } } int main() { cin>>n; for(int i=0; i&lt;n; i++) { cin>>source[i]; } px(); cout&lt;&lt;ans; return 0; } Java风格#include&lt;iostream> #include&lt;cstring> using namespace std; int source[10005]; int ed[10005]; int n; int ans; void px(int start=0,int end=n-1) { if(end-start&lt;=0) { return; } int mid = (start+end)/2; px(start, mid); px(mid+1, end); int i=start,j=mid+1,cnt=start; while(i&lt;=mid&amp;&amp;j&lt;=end) { if(source[i]&lt;=source[j]) { ed[cnt]=source[i]; i++; } else { ans+=(mid+1-i); ed[cnt]=source[j]; j++; } cnt++; } if(i&lt;=mid) { for(int k=0; k&lt;=(mid-i); k++) { ed[cnt+k]=source[i+k]; } } if(j&lt;=end) { for(int l=0; l&lt;=(end-j); l++) { ed[cnt+l]=source[j+l]; } } while(i&lt;=mid) { ed[cnt++]=source[i++]; } while(j&lt;=end) { ed[cnt++]=source[j++]; } for(int i=start; i&lt;=end; i++) { source[i]=ed[i]; } } int main() { cin>>n; for(int i=0; i&lt;n; i++) { cin>>source[i]; } px(); cout&lt;&lt;ans; return 0; } GNU风格#include&lt;iostream> #include&lt;cstring> using namespace std; int source[10005]; int ed[10005]; int n; int ans; void px(int start=0,int end=n-1) { if(end-start&lt;=0) { return; } int mid = (start+end)/2; px(start, mid); px(mid+1, end); int i=start,j=mid+1,cnt=start; while(i&lt;=mid&amp;&amp;j&lt;=end) { if(source[i]&lt;=source[j]) { ed[cnt]=source[i]; i++; } else { ans+=(mid+1-i); ed[cnt]=source[j]; j++; } cnt++; } if(i&lt;=mid) { for(int k=0; k&lt;=(mid-i); k++) { ed[cnt+k]=source[i+k]; } } if(j&lt;=end) { for(int l=0; l&lt;=(end-j); l++) { ed[cnt+l]=source[j+l]; } } while(i&lt;=mid) { ed[cnt++]=source[i++]; } while(j&lt;=end) { ed[cnt++]=source[j++]; } for(int i=start; i&lt;=end; i++) { source[i]=ed[i]; } } int main() { cin>>n; for(int i=0; i&lt;n; i++) { cin>>source[i]; } px(); cout&lt;&lt;ans; return 0; } document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","raw":"---\ntitle: 1328：【例7.7】光荣的梦想题解\nauthor: Xie Zheyuan\ntags:\n  - C/C++\n  - 信息学奥赛一本通\ncategories: \n\t- 计算机\ndate: 2020-07-26 20:30:00\nlang: zh-CN\n---\n# 题目：\n\n<td class=\"pcontent\"><center><h3>1328：【例7.7】光荣的梦想</h3></center><font size=3><h3>【题目描述】</h3>\n<div class=xxbox><p>Prince对他在这片大陆上维护的秩序感到满意，于是决定启程离开艾泽拉斯。在他动身之前，Prince决定赋予King_Bette最强大的能量以守护世界、保卫这里的平衡与和谐。在那个时代，平衡是个梦想。因为有很多奇异的物种拥有各种不稳定的能量，平衡瞬间即被打破。KB决定求助于你，帮助他完成这个梦想。 </p>\n<p>一串数列即表示一个世界的状态。 </p>\n<p>平衡是指这串数列以升序排列。而从一串无序数列到有序数列需要通过交换数列中的元素来实现。KB的能量只能交换相邻两个数字。他想知道他最少需要交换几次就能使数列有序。</p>\n</div>\n<h3>【输入】</h3>\n<div class=xxbox><p>第一行为数列中数的个数n,第二行为n ≤ 10000个数。表示当前数列的状态。</p>\n</div><h3>【输出】</h3>\n<div class=xxbox><p>输出一个整数，表示最少需要交换几次能达到平衡状态。</p>\n</div><h3>【输入样例】</h3>\n\n4\n2 1 4 3\n\n\n<font size=3><h3>【输出样例】</h3>\n```\n2\n```\n<!--more--> \n\n# 题解：\n## Linux风格C++代码\n```c\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint source[10005];\nint ed[10005];\nint n;\nint ans;\nvoid px(int start=0,int end=n-1)\n{\n\n\tif(end-start<=0) {\n\t\treturn;\n\t}\n\n\tint mid = (start+end)/2;\n\tpx(start, mid);\n\tpx(mid+1, end);\n\tint i=start,j=mid+1,cnt=start;\n\twhile(i<=mid&&j<=end) {\n\t\tif(source[i]<=source[j]) {\n\t\t\ted[cnt]=source[i];\n\t\t\ti++;\n\t\t} else {\n\t\t\tans+=(mid+1-i);\n\t\t\ted[cnt]=source[j];\n\t\t\tj++;\n\t\t}\n\n\n\t\tcnt++;\n\t}\n\tif(i<=mid) {\n\t\tfor(int k=0; k<=(mid-i); k++) {\n\t\t\ted[cnt+k]=source[i+k];\n\n\t\t}\n\t}\n\tif(j<=end) {\n\t\tfor(int l=0; l<=(end-j); l++) {\n\t\t\ted[cnt+l]=source[j+l];\n\n\t\t}\n\t}\n\twhile(i<=mid) {\n\t\ted[cnt++]=source[i++];\n\t}\n\twhile(j<=end) {\n\t\ted[cnt++]=source[j++];\n\t}\n\tfor(int i=start; i<=end; i++) {\n\t\tsource[i]=ed[i];\n\t}\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=0; i<n; i++) {\n\t\tcin>>source[i];\n\t}\n\tpx();\n\tcout<<ans;\n\treturn 0;\n}\n\n\n```\n## Allman风格\n```c\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint source[10005];\nint ed[10005];\nint n;\nint ans;\nvoid px(int start=0,int end=n-1)\n{\n\n\tif(end-start<=0)\n\t{\n\t\treturn;\n\t}\n\n\tint mid = (start+end)/2;\n\tpx(start, mid);\n\tpx(mid+1, end);\n\tint i=start,j=mid+1,cnt=start;\n\twhile(i<=mid&&j<=end)\n\t{\n\t\tif(source[i]<=source[j])\n\t\t{\n\t\t\ted[cnt]=source[i];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans+=(mid+1-i);\n\t\t\ted[cnt]=source[j];\n\t\t\tj++;\n\t\t}\n\n\n\t\tcnt++;\n\t}\n\tif(i<=mid)\n\t{\n\t\tfor(int k=0; k<=(mid-i); k++)\n\t\t{\n\t\t\ted[cnt+k]=source[i+k];\n\n\t\t}\n\t}\n\tif(j<=end)\n\t{\n\t\tfor(int l=0; l<=(end-j); l++)\n\t\t{\n\t\t\ted[cnt+l]=source[j+l];\n\n\t\t}\n\t}\n\twhile(i<=mid)\n\t{\n\t\ted[cnt++]=source[i++];\n\t}\n\twhile(j<=end)\n\t{\n\t\ted[cnt++]=source[j++];\n\t}\n\tfor(int i=start; i<=end; i++)\n\t{\n\t\tsource[i]=ed[i];\n\t}\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=0; i<n; i++)\n\t{\n\t\tcin>>source[i];\n\t}\n\tpx();\n\tcout<<ans;\n\treturn 0;\n}\n\n\n```\n\n## Java风格\n```c\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint source[10005];\nint ed[10005];\nint n;\nint ans;\nvoid px(int start=0,int end=n-1) {\n\n\tif(end-start<=0) {\n\t\treturn;\n\t}\n\n\tint mid = (start+end)/2;\n\tpx(start, mid);\n\tpx(mid+1, end);\n\tint i=start,j=mid+1,cnt=start;\n\twhile(i<=mid&&j<=end) {\n\t\tif(source[i]<=source[j]) {\n\t\t\ted[cnt]=source[i];\n\t\t\ti++;\n\t\t} else {\n\t\t\tans+=(mid+1-i);\n\t\t\ted[cnt]=source[j];\n\t\t\tj++;\n\t\t}\n\n\n\t\tcnt++;\n\t}\n\tif(i<=mid) {\n\t\tfor(int k=0; k<=(mid-i); k++) {\n\t\t\ted[cnt+k]=source[i+k];\n\n\t\t}\n\t}\n\tif(j<=end) {\n\t\tfor(int l=0; l<=(end-j); l++) {\n\t\t\ted[cnt+l]=source[j+l];\n\n\t\t}\n\t}\n\twhile(i<=mid) {\n\t\ted[cnt++]=source[i++];\n\t}\n\twhile(j<=end) {\n\t\ted[cnt++]=source[j++];\n\t}\n\tfor(int i=start; i<=end; i++) {\n\t\tsource[i]=ed[i];\n\t}\n}\nint main() {\n\tcin>>n;\n\tfor(int i=0; i<n; i++) {\n\t\tcin>>source[i];\n\t}\n\tpx();\n\tcout<<ans;\n\treturn 0;\n}\n\n```\n## GNU风格\n```c\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint source[10005];\nint ed[10005];\nint n;\nint ans;\nvoid px(int start=0,int end=n-1)\n{\n\n\tif(end-start<=0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\tint mid = (start+end)/2;\n\tpx(start, mid);\n\tpx(mid+1, end);\n\tint i=start,j=mid+1,cnt=start;\n\twhile(i<=mid&&j<=end)\n\t\t{\n\t\t\tif(source[i]<=source[j])\n\t\t\t\t{\n\t\t\t\t\ted[cnt]=source[i];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tans+=(mid+1-i);\n\t\t\t\t\ted[cnt]=source[j];\n\t\t\t\t\tj++;\n\t\t\t\t}\n\n\n\t\t\tcnt++;\n\t\t}\n\tif(i<=mid)\n\t\t{\n\t\t\tfor(int k=0; k<=(mid-i); k++)\n\t\t\t\t{\n\t\t\t\t\ted[cnt+k]=source[i+k];\n\n\t\t\t\t}\n\t\t}\n\tif(j<=end)\n\t\t{\n\t\t\tfor(int l=0; l<=(end-j); l++)\n\t\t\t\t{\n\t\t\t\t\ted[cnt+l]=source[j+l];\n\n\t\t\t\t}\n\t\t}\n\twhile(i<=mid)\n\t\t{\n\t\t\ted[cnt++]=source[i++];\n\t\t}\n\twhile(j<=end)\n\t\t{\n\t\t\ted[cnt++]=source[j++];\n\t\t}\n\tfor(int i=start; i<=end; i++)\n\t\t{\n\t\t\tsource[i]=ed[i];\n\t\t}\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=0; i<n; i++)\n\t\t{\n\t\t\tcin>>source[i];\n\t\t}\n\tpx();\n\tcout<<ans;\n\treturn 0;\n}\n\n```\n\n![用户名:xiezheyuan，题目编号:1328，运行编号:7757442，代码长度:906Bytes\n通过](/blogimages/1328-cpp-judge-answer.png)\n","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css\"><h1 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h1><center><h3>1328：【例7.7】光荣的梦想</h3></center><font size=\"3\"><h3>【题目描述】</h3>\n<div class=\"xxbox\"><p>Prince对他在这片大陆上维护的秩序感到满意，于是决定启程离开艾泽拉斯。在他动身之前，Prince决定赋予King_Bette最强大的能量以守护世界、保卫这里的平衡与和谐。在那个时代，平衡是个梦想。因为有很多奇异的物种拥有各种不稳定的能量，平衡瞬间即被打破。KB决定求助于你，帮助他完成这个梦想。 </p>\n<p>一串数列即表示一个世界的状态。 </p>\n<p>平衡是指这串数列以升序排列。而从一串无序数列到有序数列需要通过交换数列中的元素来实现。KB的能量只能交换相邻两个数字。他想知道他最少需要交换几次就能使数列有序。</p>\n</div>\n<h3>【输入】</h3>\n<div class=\"xxbox\"><p>第一行为数列中数的个数n,第二行为n ≤ 10000个数。表示当前数列的状态。</p>\n</div><h3>【输出】</h3>\n<div class=\"xxbox\"><p>输出一个整数，表示最少需要交换几次能达到平衡状态。</p>\n</div><h3>【输入样例】</h3>\n\n<p>4<br>2 1 4 3</p>\n<p><font size=\"3\"></font></p><h3><font size=\"3\">【输出样例】</font></h3><p></p><font size=\"3\">\n<pre><code>2</code></pre><a id=\"more\"></a> \n\n<h1 id=\"题解：\"><a href=\"#题解：\" class=\"headerlink\" title=\"题解：\"></a>题解：</h1><h2 id=\"Linux风格C-代码\"><a href=\"#Linux风格C-代码\" class=\"headerlink\" title=\"Linux风格C++代码\"></a>Linux风格C++代码</h2><pre class=\" language-c\"><code class=\"language-c\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;cstring></span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> source<span class=\"token punctuation\">[</span><span class=\"token number\">10005</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> ed<span class=\"token punctuation\">[</span><span class=\"token number\">10005</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> ans<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">px</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> start<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> end<span class=\"token operator\">=</span>n<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">-</span>start<span class=\"token operator\">&lt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start<span class=\"token operator\">+</span>end<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">px</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">px</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>start<span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>cnt<span class=\"token operator\">=</span>start<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span>mid<span class=\"token operator\">&amp;&amp;</span>j<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ed<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            ans<span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ed<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n\n        cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span>mid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">&lt;=</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">+</span>k<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">&lt;=</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">-</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">+</span>l<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span>mid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>start<span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>ed<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    cin<span class=\"token operator\">>></span>n<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        cin<span class=\"token operator\">>></span>source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">px</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cout<span class=\"token operator\">&lt;&lt;</span>ans<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2 id=\"Allman风格\"><a href=\"#Allman风格\" class=\"headerlink\" title=\"Allman风格\"></a>Allman风格</h2><pre class=\" language-c\"><code class=\"language-c\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;cstring></span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> source<span class=\"token punctuation\">[</span><span class=\"token number\">10005</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> ed<span class=\"token punctuation\">[</span><span class=\"token number\">10005</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> ans<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">px</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> start<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> end<span class=\"token operator\">=</span>n<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">-</span>start<span class=\"token operator\">&lt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start<span class=\"token operator\">+</span>end<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">px</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">px</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>start<span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>cnt<span class=\"token operator\">=</span>start<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span>mid<span class=\"token operator\">&amp;&amp;</span>j<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            ed<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{</span>\n            ans<span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ed<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n\n        cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span>mid<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">&lt;=</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">+</span>k<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">&lt;=</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">-</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">+</span>l<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span>mid<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>start<span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>ed<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    cin<span class=\"token operator\">>></span>n<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        cin<span class=\"token operator\">>></span>source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">px</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cout<span class=\"token operator\">&lt;&lt;</span>ans<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h2 id=\"Java风格\"><a href=\"#Java风格\" class=\"headerlink\" title=\"Java风格\"></a>Java风格</h2><pre class=\" language-c\"><code class=\"language-c\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;cstring></span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> source<span class=\"token punctuation\">[</span><span class=\"token number\">10005</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> ed<span class=\"token punctuation\">[</span><span class=\"token number\">10005</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> ans<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">px</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> start<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> end<span class=\"token operator\">=</span>n<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">-</span>start<span class=\"token operator\">&lt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start<span class=\"token operator\">+</span>end<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">px</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">px</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>start<span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>cnt<span class=\"token operator\">=</span>start<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span>mid<span class=\"token operator\">&amp;&amp;</span>j<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ed<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            ans<span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            ed<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n\n        cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span>mid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">&lt;=</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">+</span>k<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">&lt;=</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">-</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">+</span>l<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span>mid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>start<span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>ed<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    cin<span class=\"token operator\">>></span>n<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        cin<span class=\"token operator\">>></span>source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">px</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cout<span class=\"token operator\">&lt;&lt;</span>ans<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"GNU风格\"><a href=\"#GNU风格\" class=\"headerlink\" title=\"GNU风格\"></a>GNU风格</h2><pre class=\" language-c\"><code class=\"language-c\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;cstring></span></span>\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> source<span class=\"token punctuation\">[</span><span class=\"token number\">10005</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> ed<span class=\"token punctuation\">[</span><span class=\"token number\">10005</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> ans<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">px</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> start<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> end<span class=\"token operator\">=</span>n<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">-</span>start<span class=\"token operator\">&lt;=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">int</span> mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>start<span class=\"token operator\">+</span>end<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">px</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">px</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>start<span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>cnt<span class=\"token operator\">=</span>start<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span>mid<span class=\"token operator\">&amp;&amp;</span>j<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{</span>\n                    ed<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span>\n                <span class=\"token punctuation\">{</span>\n                    ans<span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    ed<span class=\"token punctuation\">[</span>cnt<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n\n            cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span>mid<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">&lt;=</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{</span>\n                    ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">+</span>k<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">&lt;=</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">-</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{</span>\n                    ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">+</span>l<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span>mid<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            ed<span class=\"token punctuation\">[</span>cnt<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>source<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>start<span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>ed<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    cin<span class=\"token operator\">>></span>n<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            cin<span class=\"token operator\">>></span>source<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">px</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cout<span class=\"token operator\">&lt;&lt;</span>ans<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p><img src=\"/blogimages/1328-cpp-judge-answer.png\" alt=\"用户名:xiezheyuan，题目编号:1328，运行编号:7757442，代码长度:906Bytes\n通过\"></p>\n</font></font><script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","tags":[{"name":"C/C++","slug":"C-C","permalink":"http://xiezheyuan.top/tags/C-C/"},{"name":"信息学奥赛一本通","slug":"信息学奥赛一本通","permalink":"http://xiezheyuan.top/tags/%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%A5%A5%E8%B5%9B%E4%B8%80%E6%9C%AC%E9%80%9A/"}]},{"title":"Python经验帖——pyinstaller","date":"2020-07-12T13:12:28.000Z","path":"2020/07/12/pythonexp-pyinstaller/","text":"PyInstaller介绍PyInstaller是一个简单的python编译程序，可以把py 源文件编译成 exe 可执行文件（据说还可以变成.app等，但没有亲测过） PyInstaller安装直接运行pip命令即可 python -m pip install pyinstaller //Windows/MS-DOS pip install pyinstaller //Liunx/Unix pip3 install pyinstaller //Mac 注：如果下载过慢或超时(Timeout)那么可以选择清华镜像，详细参考 让python pip使用国内镜像(Cnblog) PyInstaller使用写一个python程序1.py print(\"Hello World\") strong text 尝试编译python -m PyInstaller 1.py 会生成dist目录，dist目录下有1目录，里面就是所有文件 其他-w生成GUI程序（无CMD窗口） -F生成单个文件 -i [ico]加图标（很有用） document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","raw":"title: Python经验帖——pyinstaller\ntags:\n  \n  - python\n  - pyinstaller\ndescription: PyInstaller是一个简单的python编译程序\ndate: 2020-07-12 21:12:28\ncategories:\n\t- 计算机\n---\n# PyInstaller介绍\n\nPyInstaller是一个简单的python编译程序，可以把**py** 源文件编译成 **exe** 可执行文件（据说还可以变成.app等，但没有亲测过）\n<!--more-->\n# PyInstaller安装\n\n直接运行pip命令即可\n\n```powershell\npython -m pip install pyinstaller //Windows/MS-DOS\npip install pyinstaller //Liunx/Unix\npip3 install pyinstaller //Mac\n```\n\n> 注：如果下载过慢或超时(Timeout)那么可以选择清华镜像，详细参考 [让python pip使用国内镜像(Cnblog)](https://www.cnblogs.com/wqpkita/p/7248525.html)\n\n\n# PyInstaller使用\n\n## 写一个python程序\n\n1.py\n```python\nprint(\"Hello World\")\n```\n**strong text**\n## 尝试编译\n```powershell\npython -m PyInstaller 1.py\n```\n会生成dist目录，dist目录下有1目录，里面就是所有文件\n\n## 其他\n\n### -w\n\n生成GUI程序（无CMD窗口）\n\n### -F\n\n生成单个文件\n\n### -i [ico]\n\n加图标（很有用）","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css\"><h1 id=\"PyInstaller介绍\"><a href=\"#PyInstaller介绍\" class=\"headerlink\" title=\"PyInstaller介绍\"></a>PyInstaller介绍</h1><p>PyInstaller是一个简单的python编译程序，可以把<strong>py</strong> 源文件编译成 <strong>exe</strong> 可执行文件（据说还可以变成.app等，但没有亲测过）</p>\n<a id=\"more\"></a>\n<h1 id=\"PyInstaller安装\"><a href=\"#PyInstaller安装\" class=\"headerlink\" title=\"PyInstaller安装\"></a>PyInstaller安装</h1><p>直接运行pip命令即可</p>\n<pre class=\" language-powershell\"><code class=\"language-powershell\">python <span class=\"token operator\">-</span>m pip install pyinstaller <span class=\"token operator\">/</span><span class=\"token operator\">/</span>Windows<span class=\"token operator\">/</span>MS<span class=\"token operator\">-</span>DOS\npip install pyinstaller <span class=\"token operator\">/</span><span class=\"token operator\">/</span>Liunx<span class=\"token operator\">/</span>Unix\npip3 install pyinstaller <span class=\"token operator\">/</span><span class=\"token operator\">/</span>Mac</code></pre>\n<blockquote>\n<p>注：如果下载过慢或超时(Timeout)那么可以选择清华镜像，详细参考 <a href=\"https://www.cnblogs.com/wqpkita/p/7248525.html\" target=\"_blank\" rel=\"noopener\">让python pip使用国内镜像(Cnblog)</a></p>\n</blockquote>\n<h1 id=\"PyInstaller使用\"><a href=\"#PyInstaller使用\" class=\"headerlink\" title=\"PyInstaller使用\"></a>PyInstaller使用</h1><h2 id=\"写一个python程序\"><a href=\"#写一个python程序\" class=\"headerlink\" title=\"写一个python程序\"></a>写一个python程序</h2><p>1.py</p>\n<pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span></code></pre>\n<p><strong>strong text</strong></p>\n<h2 id=\"尝试编译\"><a href=\"#尝试编译\" class=\"headerlink\" title=\"尝试编译\"></a>尝试编译</h2><pre class=\" language-powershell\"><code class=\"language-powershell\">python <span class=\"token operator\">-</span>m PyInstaller 1<span class=\"token punctuation\">.</span>py</code></pre>\n<p>会生成dist目录，dist目录下有1目录，里面就是所有文件</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"w\"><a href=\"#w\" class=\"headerlink\" title=\"-w\"></a>-w</h3><p>生成GUI程序（无CMD窗口）</p>\n<h3 id=\"F\"><a href=\"#F\" class=\"headerlink\" title=\"-F\"></a>-F</h3><p>生成单个文件</p>\n<h3 id=\"i-ico\"><a href=\"#i-ico\" class=\"headerlink\" title=\"-i [ico]\"></a>-i [ico]</h3><p>加图标（很有用）</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","tags":[{"name":"python","slug":"python","permalink":"http://xiezheyuan.top/tags/python/"},{"name":"pyinstaller","slug":"pyinstaller","permalink":"http://xiezheyuan.top/tags/pyinstaller/"}]},{"title":"1326：【例7.5】 取余运算（mod）答案","date":"2020-07-05T11:54:00.000Z","path":"2020/07/05/1326-mod-answer/","text":"题目：点击查看 初次解（有错）#include&lt;iostream> #include&lt;cmath> using namespace std; typedef long long int lli; lli b,p,k; lli pow_(lli a, lli b){ lli ans=1; for(int i=1;i&lt;b;i++) { ans *= i; } return ans; } int main(){ cin>>b>>p>>k; lli ans = pow(b, p) % k; cout&lt;&lt;ans; return 0; } 错误分析pow太大，无法写入内存 答案#include&lt;iostream> #include&lt;algorithm> #include&lt;math.h> #include&lt;stdio.h> typedef long long int ll; using namespace std; ll digui(ll b,ll p,ll k) { if(p==0) return 1; ll re=digui(b,p/2,k); re = (re * re)% k; if(p%2) { re= (re*b)%k; } return re; } int main() { ll b,p,k;cin>>b>>p>>k; printf(\"%lld^%lld mod %lld=%lld\",b,p,k,digui(b,p,k)); return 0; } document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","raw":"title: 1326：【例7.5】 取余运算（mod）答案\nauthor: Xie Zheyuan\ntags:\n  - C/C++\n  - 信息学奥赛一本通\ncategories: \n\t- '计算机'\ndate: 2020-07-05 19:54:00\nlang: zh-CN\n---\n# 题目：\n[点击查看](http://ybt.ssoier.cn:8088/problem_show.php?pid=1326)\n<!--more-->\n\n# 初次解（有错）\n```cpp\n#include<iostream>\n#include<cmath>\nusing namespace std;\ntypedef long long int lli;\nlli b,p,k;\nlli pow_(lli a, lli b){\n\tlli ans=1;\n\tfor(int i=1;i<b;i++) {\n\t\tans *= i;\n\t}\n\treturn ans;\n} \nint main(){\n\tcin>>b>>p>>k;\n\tlli ans = pow(b, p) % k;\n\tcout<<ans;\n\treturn 0;\n}\n\n\n```\n\n#### 错误分析\npow**太大**，无法写入内存\n\n\n# 答案\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<math.h>\n#include<stdio.h>\ntypedef long long int ll;\nusing namespace std;\nll digui(ll b,ll p,ll k)\n{\n\tif(p==0)\n\t\treturn 1;\n\tll re=digui(b,p/2,k);\n\tre = (re * re)% k;\n\tif(p%2)\n\t{\n\t\tre= (re*b)%k;\n\t}\n\treturn re;\n\t\n} \nint main()\n{\n\tll b,p,k;cin>>b>>p>>k;\n\tprintf(\"%lld^%lld mod %lld=%lld\",b,p,k,digui(b,p,k));\n\treturn 0;\n}\n\n```","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css\"><h1 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h1><p><a href=\"http://ybt.ssoier.cn:8088/problem_show.php?pid=1326\" target=\"_blank\" rel=\"noopener\">点击查看</a></p>\n<a id=\"more\"></a>\n\n<h1 id=\"初次解（有错）\"><a href=\"#初次解（有错）\" class=\"headerlink\" title=\"初次解（有错）\"></a>初次解（有错）</h1><pre class=\" language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;cmath></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> lli<span class=\"token punctuation\">;</span>\nlli b<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">;</span>\nlli <span class=\"token function\">pow_</span><span class=\"token punctuation\">(</span>lli a<span class=\"token punctuation\">,</span> lli b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    lli ans<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>b<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ans <span class=\"token operator\">*</span><span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> \n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    cin<span class=\"token operator\">>></span>b<span class=\"token operator\">>></span>p<span class=\"token operator\">>></span>k<span class=\"token punctuation\">;</span>\n    lli ans <span class=\"token operator\">=</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> k<span class=\"token punctuation\">;</span>\n    cout<span class=\"token operator\">&lt;&lt;</span>ans<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h4 id=\"错误分析\"><a href=\"#错误分析\" class=\"headerlink\" title=\"错误分析\"></a>错误分析</h4><p>pow<strong>太大</strong>，无法写入内存</p>\n<h1 id=\"答案\"><a href=\"#答案\" class=\"headerlink\" title=\"答案\"></a>答案</h1><pre class=\" language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;algorithm></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;math.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> ll<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\nll <span class=\"token function\">digui</span><span class=\"token punctuation\">(</span>ll b<span class=\"token punctuation\">,</span>ll p<span class=\"token punctuation\">,</span>ll k<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    ll re<span class=\"token operator\">=</span><span class=\"token function\">digui</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span>p<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    re <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>re <span class=\"token operator\">*</span> re<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span> k<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        re<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>re<span class=\"token operator\">*</span>b<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>k<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> re<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span> \n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    ll b<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">;</span>cin<span class=\"token operator\">>></span>b<span class=\"token operator\">>></span>p<span class=\"token operator\">>></span>k<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%lld^%lld mod %lld=%lld\"</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">,</span><span class=\"token function\">digui</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","tags":[{"name":"C/C++","slug":"C-C","permalink":"http://xiezheyuan.top/tags/C-C/"},{"name":"信息学奥赛一本通","slug":"信息学奥赛一本通","permalink":"http://xiezheyuan.top/tags/%E4%BF%A1%E6%81%AF%E5%AD%A6%E5%A5%A5%E8%B5%9B%E4%B8%80%E6%9C%AC%E9%80%9A/"}]},{"title":"无8数的探究","date":"2020-07-04T10:53:00.000Z","path":"2020/07/04/none-8-number/","text":"什么是无八数简而述之，无八数就是“123456789中去掉8，得到的12345679，就是无八数 无八数的性质 无八数为什么会这样九位数111111111，除以9等于12345679! 更多无八数可以通过以下公式推导出十进制无八数类似数 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","raw":"title: 无8数的探究\nauthor: Xie Zheyuan\ntags:\n  \n  - 无八数\ncategories: \n\t- 数学\ndate: 2020-07-04 18:53:00\n---\n# 什么是无八数\n简而述之，无八数就是“**123456789**中去掉**8**，得到的**12345679**，就是**无八数**\n<!--more-->\n## 无八数的性质\n![](/blogimages/none-eight-define.gif)\n\n![](/blogimages/none-eight-define2.gif)\n\n\n## 无八数为什么会这样\n九位数**111111111**，除以9等于**12345679**!\n![](/blogimages/111111111-and-none-eight.gif)\n\n# 更多无八数\n可以通过以下公式推导出十进制无八数类似数\n![](/blogimages/none-eight-create.gif)\n\n![](/blogimages/none-eight-use.gif)","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css\"><h1 id=\"什么是无八数\"><a href=\"#什么是无八数\" class=\"headerlink\" title=\"什么是无八数\"></a>什么是无八数</h1><p>简而述之，无八数就是“<strong>123456789</strong>中去掉<strong>8</strong>，得到的<strong>12345679</strong>，就是<strong>无八数</strong></p>\n<a id=\"more\"></a>\n<h2 id=\"无八数的性质\"><a href=\"#无八数的性质\" class=\"headerlink\" title=\"无八数的性质\"></a>无八数的性质</h2><p><img src=\"/blogimages/none-eight-define.gif\" alt=\"\"></p>\n<p><img src=\"/blogimages/none-eight-define2.gif\" alt=\"\"></p>\n<h2 id=\"无八数为什么会这样\"><a href=\"#无八数为什么会这样\" class=\"headerlink\" title=\"无八数为什么会这样\"></a>无八数为什么会这样</h2><p>九位数<strong>111111111</strong>，除以9等于<strong>12345679</strong>!<br><img src=\"/blogimages/111111111-and-none-eight.gif\" alt=\"\"></p>\n<h1 id=\"更多无八数\"><a href=\"#更多无八数\" class=\"headerlink\" title=\"更多无八数\"></a>更多无八数</h1><p>可以通过以下公式推导出十进制无八数类似数<br><img src=\"/blogimages/none-eight-create.gif\" alt=\"\"></p>\n<p><img src=\"/blogimages/none-eight-use.gif\" alt=\"\"></p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","tags":[{"name":"无八数","slug":"无八数","permalink":"http://xiezheyuan.top/tags/%E6%97%A0%E5%85%AB%E6%95%B0/"}]},{"title":"python简易数据分析","date":"2020-07-04T10:47:50.000Z","path":"2020/07/04/python-simple-data-analysis/","text":"python简易数据分析1、平均数(Average) 话不多说，直接上代码 def average(data): sum_ = sum(data) # 调用内置求和函数 a_val = sum_ / len(data) return a_val 2、方差(Variance)何谓方差? 方差是在概率论和统计方差衡量随机变量或一组数据时离散程度的度量。概率论中方差用来度量随机变量和其数学期望（即均值）之间的偏离程度。统计中的方差（样本方差）是每个样本值与全体样本值的平均数之差的平方值的平均数。在许多实际问题中，研究方差即偏离程度有着重要意义。—— 百度百科 代码def variance(data): a_val = average(data) var = 0 for i in data: var += abs(a_val - i) ** 2 var /= len(data) return a_val 平均差(Mean Deviation)何谓平均差 平均差（Mean Deviation）是表示各个变量值之间差异程度的数值之一。指各个变量值同平均数的离差绝对值的算术平均数。 平均差异大，表明各标志值与算术平均数的差异程度越大，该算术平均数的代表性就越小；平均差越小，表明各标志值与算术平均数的差异程度越小，该算术平均数的代表性就越大。因离差和为零，离差的平均数不能将离差和除以离差的个数求得，而必须将离差取绝对数来消除正负号。平均差是反应各标志值与算术平均数之间的平均差异。——百度百科 代码def mean(data): a_val = average(data) var = 0 for i in data: var += abs(a_val - i) var /= len(data) return var 标准差(Standard Deviation)何谓标准差 标准差（Standard Deviation） ，是离均差平方的算术平均数的平方根，用σ表示。在概率统计中最常使用作为统计分布程度上的测量。标准差是方差的算术平方根。标准差能反映一个数据集的离散程度。平均数相同的两组数据，标准差未必相同。——百度百科 代码from math import sqrt def sd(data): v = sqrt(variance(data)) return v 极差(Range)这就更不用说啦！ def range_(data): max_ = max(data) min_ = min(data) return max_ - min_ 完整代码完整代码如下所示（PEP通过） from math import sqrt def average(data): sum_ = sum(data) a_val = sum_ / len(data) return a_val def variance(data): a_val = average(data) var = 0 for i in data: var += abs(a_val - i) ** 2 var /= len(data) return a_val def mean(data): a_val = average(data) var = 0 for i in data: var += abs(a_val - i) var /= len(data) return var def sd(data): v = sqrt(variance(data)) return v def range_(data): max_ = max(data) min_ = min(data) return max_ - min_ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","raw":"title: python简易数据分析\ntags:\n  \n  - python\n  - 数据分析\ndescription: 简易数据分析\ndate: 2020-07-04 18:47:50\ncategories:\n    - 计算机\n    \n---\n#  python简易数据分析\n## 1、平均数(Average)\n<!--more-->\n话不多说，直接上代码\n```python\ndef average(data):\n    sum_ = sum(data) # 调用内置求和函数\n    a_val = sum_ / len(data)\n    return a_val\n```\n\n## 2、方差(Variance)\n### 何谓方差?\n> 方差是在概率论和统计方差衡量随机变量或一组数据时离散程度的度量。概率论中方差用来度量随机变量和其数学期望（即均值）之间的偏离程度。统计中的方差（样本方差）是每个样本值与全体样本值的平均数之差的平方值的平均数。在许多实际问题中，研究方差即偏离程度有着重要意义。\n>—— [百度百科](https://baike.baidu.com/item%E6%96%B9%E5%B7%AE/3108412)\n\n![方差公式图片](/blogimages/variance.svg)\n### 代码\n```python\ndef variance(data):\n    a_val = average(data)\n    var = 0\n    for i in data:\n        var += abs(a_val - i) ** 2\n    \n    var /= len(data)\n    return a_val\n```\n\n## 平均差(Mean Deviation)\n### 何谓平均差\n> 平均差（Mean Deviation）是表示各个变量值之间差异程度的数值之一。指各个变量值同平均数的离差绝对值的算术平均数。\n  平均差异大，表明各标志值与算术平均数的差异程度越大，该算术平均数的代表性就越小；平均差越小，表明各标志值与算术平均数的差异程度越小，该算术平均数的代表性就越大。因离差和为零，离差的平均数不能将离差和除以离差的个数求得，而必须将离差取绝对数来消除正负号。平均差是反应各标志值与算术平均数之间的平均差异。\n>——[百度百科](https://baike.baidu.com/item/%E5%B9%B3%E5%9D%87%E5%B7%AE)\n\n![平均差公式图片](/blogimages/mean.svg)\n## 代码\n\n```python\ndef mean(data):\n    a_val = average(data)\n    var = 0\n    for i in data:\n        var += abs(a_val - i)\n\n    var /= len(data)\n    return var\n```\n\n## 标准差(Standard Deviation)\n\n### 何谓标准差\n> 标准差（Standard Deviation） ，是离均差平方的算术平均数的平方根，用σ表示。在概率统计中最常使用作为统计分布程度上的测量。标准差是方差的算术平方根。标准差能反映一个数据集的离散程度。平均数相同的两组数据，标准差未必相同。\n> ——[百度百科](https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E5%B7%AE)\n\n### 代码\n```python\nfrom math import sqrt\n\ndef sd(data):\n    v = sqrt(variance(data))\n    return v\n```\n\n## 极差(Range)\n这就更不用说啦！\n```python\ndef range_(data):\n    max_ = max(data)\n    min_ = min(data)\n    return max_ - min_\n```\n\n## 完整代码\n完整代码如下所示（PEP通过）\n```python\nfrom math import sqrt\n\n\ndef average(data):\n    sum_ = sum(data)\n    a_val = sum_ / len(data)\n    return a_val\n\n\ndef variance(data):\n    a_val = average(data)\n    var = 0\n    for i in data:\n        var += abs(a_val - i) ** 2\n\n    var /= len(data)\n    return a_val\n\n\ndef mean(data):\n    a_val = average(data)\n    var = 0\n    for i in data:\n        var += abs(a_val - i)\n\n    var /= len(data)\n    return var\n\n\ndef sd(data):\n    v = sqrt(variance(data))\n    return v\n\n\ndef range_(data):\n    max_ = max(data)\n    min_ = min(data)\n    return max_ - min_\n\n```","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css\"><h1 id=\"python简易数据分析\"><a href=\"#python简易数据分析\" class=\"headerlink\" title=\"python简易数据分析\"></a>python简易数据分析</h1><h2 id=\"1、平均数-Average\"><a href=\"#1、平均数-Average\" class=\"headerlink\" title=\"1、平均数(Average)\"></a>1、平均数(Average)</h2><a id=\"more\"></a>\n<p>话不多说，直接上代码</p>\n<pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">average</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sum_ <span class=\"token operator\">=</span> sum<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\"># 调用内置求和函数</span>\n    a_val <span class=\"token operator\">=</span> sum_ <span class=\"token operator\">/</span> len<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> a_val</code></pre>\n<h2 id=\"2、方差-Variance\"><a href=\"#2、方差-Variance\" class=\"headerlink\" title=\"2、方差(Variance)\"></a>2、方差(Variance)</h2><h3 id=\"何谓方差\"><a href=\"#何谓方差\" class=\"headerlink\" title=\"何谓方差?\"></a>何谓方差?</h3><blockquote>\n<p>方差是在概率论和统计方差衡量随机变量或一组数据时离散程度的度量。概率论中方差用来度量随机变量和其数学期望（即均值）之间的偏离程度。统计中的方差（样本方差）是每个样本值与全体样本值的平均数之差的平方值的平均数。在许多实际问题中，研究方差即偏离程度有着重要意义。<br>—— <a href=\"https://baike.baidu.com/item%E6%96%B9%E5%B7%AE/3108412\" target=\"_blank\" rel=\"noopener\">百度百科</a></p>\n</blockquote>\n<p><img src=\"/blogimages/variance.svg\" alt=\"方差公式图片\"></p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">variance</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a_val <span class=\"token operator\">=</span> average<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    var <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n        var <span class=\"token operator\">+=</span> abs<span class=\"token punctuation\">(</span>a_val <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span>\n\n    var <span class=\"token operator\">/=</span> len<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> a_val</code></pre>\n<h2 id=\"平均差-Mean-Deviation\"><a href=\"#平均差-Mean-Deviation\" class=\"headerlink\" title=\"平均差(Mean Deviation)\"></a>平均差(Mean Deviation)</h2><h3 id=\"何谓平均差\"><a href=\"#何谓平均差\" class=\"headerlink\" title=\"何谓平均差\"></a>何谓平均差</h3><blockquote>\n<p>平均差（Mean Deviation）是表示各个变量值之间差异程度的数值之一。指各个变量值同平均数的离差绝对值的算术平均数。<br>  平均差异大，表明各标志值与算术平均数的差异程度越大，该算术平均数的代表性就越小；平均差越小，表明各标志值与算术平均数的差异程度越小，该算术平均数的代表性就越大。因离差和为零，离差的平均数不能将离差和除以离差的个数求得，而必须将离差取绝对数来消除正负号。平均差是反应各标志值与算术平均数之间的平均差异。<br>——<a href=\"https://baike.baidu.com/item/%E5%B9%B3%E5%9D%87%E5%B7%AE\" target=\"_blank\" rel=\"noopener\">百度百科</a></p>\n</blockquote>\n<p><img src=\"/blogimages/mean.svg\" alt=\"平均差公式图片\"></p>\n<h2 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h2><pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">mean</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a_val <span class=\"token operator\">=</span> average<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    var <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n        var <span class=\"token operator\">+=</span> abs<span class=\"token punctuation\">(</span>a_val <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span>\n\n    var <span class=\"token operator\">/=</span> len<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> var</code></pre>\n<h2 id=\"标准差-Standard-Deviation\"><a href=\"#标准差-Standard-Deviation\" class=\"headerlink\" title=\"标准差(Standard Deviation)\"></a>标准差(Standard Deviation)</h2><h3 id=\"何谓标准差\"><a href=\"#何谓标准差\" class=\"headerlink\" title=\"何谓标准差\"></a>何谓标准差</h3><blockquote>\n<p>标准差（Standard Deviation） ，是离均差平方的算术平均数的平方根，用σ表示。在概率统计中最常使用作为统计分布程度上的测量。标准差是方差的算术平方根。标准差能反映一个数据集的离散程度。平均数相同的两组数据，标准差未必相同。<br>——<a href=\"https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E5%B7%AE\" target=\"_blank\" rel=\"noopener\">百度百科</a></p>\n</blockquote>\n<h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h3><pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> math <span class=\"token keyword\">import</span> sqrt\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sd</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    v <span class=\"token operator\">=</span> sqrt<span class=\"token punctuation\">(</span>variance<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> v</code></pre>\n<h2 id=\"极差-Range\"><a href=\"#极差-Range\" class=\"headerlink\" title=\"极差(Range)\"></a>极差(Range)</h2><p>这就更不用说啦！</p>\n<pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">range_</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    max_ <span class=\"token operator\">=</span> max<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    min_ <span class=\"token operator\">=</span> min<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> max_ <span class=\"token operator\">-</span> min_</code></pre>\n<h2 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h2><p>完整代码如下所示（PEP通过）</p>\n<pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> math <span class=\"token keyword\">import</span> sqrt\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">average</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sum_ <span class=\"token operator\">=</span> sum<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    a_val <span class=\"token operator\">=</span> sum_ <span class=\"token operator\">/</span> len<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> a_val\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">variance</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a_val <span class=\"token operator\">=</span> average<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    var <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n        var <span class=\"token operator\">+=</span> abs<span class=\"token punctuation\">(</span>a_val <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span>\n\n    var <span class=\"token operator\">/=</span> len<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> a_val\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">mean</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a_val <span class=\"token operator\">=</span> average<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    var <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n        var <span class=\"token operator\">+=</span> abs<span class=\"token punctuation\">(</span>a_val <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span>\n\n    var <span class=\"token operator\">/=</span> len<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> var\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">sd</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    v <span class=\"token operator\">=</span> sqrt<span class=\"token punctuation\">(</span>variance<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> v\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">range_</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    max_ <span class=\"token operator\">=</span> max<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    min_ <span class=\"token operator\">=</span> min<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> max_ <span class=\"token operator\">-</span> min_\n</code></pre>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","tags":[{"name":"python","slug":"python","permalink":"http://xiezheyuan.top/tags/python/"},{"name":"数据分析","slug":"数据分析","permalink":"http://xiezheyuan.top/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"}]},{"title":"html 嵌入404公益页面","date":"2020-04-06T16:00:00.000Z","path":"2020/04/07/404page/","text":"大部分人在网上看到的公益404页面是如何写的呢？ 其实很简单！ &lt;!DOCTYPE html> &lt;html lang=\"zh\"> &lt;head> &lt;meta charset=\"UTF-8\"> &lt;title>404 Not Found&lt;/title> &lt;script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"自己的网站地址\" homePageName=\"回到我的主页\">&lt;/script> &lt;/head> &lt;body> &lt;div class=\"footer\"> &lt;p>Copyright © 2020自己的名字. All Rights Reserved.&lt;/p> &lt;/div> &lt;/body> &lt;/html> 就区区13行，就实现了！ 首发于CSDN博客https://blog.csdn.net/pythonbilly document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","raw":"title: html 嵌入404公益页面\ntags:\n  \n  - HTML\ndescription: 大部分人在网上看到的公益404页面是如何写的呢？\ndate: 2020-04-07 00:00:00\ncategories:\n\t- 计算机\nlang: zh-CN\n---\n大部分人在网上看到的公益404页面是如何写的呢？\n<!--more-->\n\n其实很简单！\n```html\n<!DOCTYPE html>\n<html lang=\"zh\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>404 Not Found</title>\n\n    <script type=\"text/javascript\" src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"自己的网站地址\" homePageName=\"回到我的主页\"></script>\n</head>\n<body>\n\n<div class=\"footer\">\n    <p>Copyright © 2020自己的名字. All Rights Reserved.</p>\n</div>\n</body>\n</html>\n```\n\n就区区13行，就实现了！\n\n首发于CSDN博客https://blog.csdn.net/pythonbilly","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css\"><p>大部分人在网上看到的公益404页面是如何写的呢？</p>\n<a id=\"more\"></a>\n\n<p>其实很简单！</p>\n<pre class=\" language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>zh<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>404 Not Found<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">homePageUrl</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>自己的网站地址<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">homePageName</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>回到我的主页<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>footer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Copyright © 2020自己的名字. All Rights Reserved.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>就区区13行，就实现了！</p>\n<p>首发于CSDN博客<a href=\"https://blog.csdn.net/pythonbilly\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/pythonbilly</a></p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","tags":[{"name":"HTML","slug":"HTML","permalink":"http://xiezheyuan.top/tags/HTML/"}]},{"title":"超完整Github开发指南","date":"2020-04-02T16:00:00.000Z","path":"2020/04/03/github-guide/","text":"本文章为imgchr图床测试文章0、目录 1、注册GitHub 账户2、创建第一个仓库 3、上传至仓库4、使用Github Pages创造自己的网站 1、注册GitHub 账户访问Github,若无意外，则效果为以下所示（Firefox) 输入用户名、邮箱（确保可用）、密码，点击Sign up for Github，再填写几个个人信息，就Well Done了！ 注册完后点击Sign in,填写用户名及密码即可。 然后就可以看到个人界面了！ 2、创建第一个仓库点击Repositories右侧的New，即可跳转至仓库创造页！ ​ 可以填写Repository name(仓库名称）、Description（仓库描述）等。 注：关于license：请访问Choose an open source license 3、上传至仓库1、下载GitHub Desktop 2、打开软件 3、克隆仓库 编写，点击COMMIT TO MASTER和PUSH ORIGN即可！ 4、使用Github Pages创造自己的网站新建一个仓库，以username.github.io 命名（username是指你的用户名）新建完成后，使用Github Desktop推送网页至该仓库。Q&amp;：万一网站做不好肿么办？A：1、使用Github主题：访问Settings-&gt;GitHub Pages-&gt;Theme Chooser-&gt;Change Theme 选择样式，不过好像只适合写主页，并且必须使用Markdown格式。2、使用模板网站，这里推荐HTML5 UP看到自己心仪的主题，可以选择Free Download，或者点击Live Demo查看预览。注：大家可以看看我的网站：xiezheyuan.top 5、为自己的项目创建Github Pages 网站与4、使用Github Pages创造自己的网站 类似，不过需要选择Settings-&gt;GitHub Pages-&gt;Source选择上传地址，默认为None，建议为master branch /docs folder，这样可以将网站与程序分开（master branch /docs folder指仅上传docs目录）首发于CSDN博客https://blog.csdn.net/pythonbilly document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","raw":"title: 超完整Github开发指南\ntags:\n  \n  - Github\ndescription: Github开发指南\ndate: 2020-04-03 00:00:00\ncategories:\n\t- 计算机\nlang: zh-CN\n\n---\n### 本文章为imgchr图床测试文章\n\n# 0、目录\n<!--more-->\n<a href=\"#first\">1、注册GitHub 账户</a>\n<a href=\"#second\">2、创建第一个仓库 </a>\n<a href=\"#third\">3、上传至仓库</a>\n<a name=\"#fourth\">4、使用Github Pages创造自己的网站</a>\n# 1、注册GitHub 账户\n访问[Github](http://www.github.com/),若无意外，则效果为以下所示（Firefox)\n\n![Github首页](https://s1.ax1x.com/2020/10/06/0UFtBV.png)\n\n输入**用户名**、**邮箱（确保可用）**、**密码**，点击Sign up for Github，再填写几个个人信息，就Well Done了！\n\n注册完后点击Sign in,填写用户名及密码即可。\n\n![Github 登录页](https://s1.ax1x.com/2020/10/06/0UF8cn.png)\n\n\n\n\n\n\n\n然后就可以看到个人界面了！\n\n![Github 个人主页](https://s1.ax1x.com/2020/10/06/0UFYn0.png)\n<a name=\"second\"></a>\n# 2、创建第一个仓库\n点击Repositories右侧的New，即可跳转至仓库创造页！\n\n​![仓库创造页](https://s1.ax1x.com/2020/10/06/0UFN7T.png)\n\n\n\n可以填写Repository name(仓库名称）、Description（仓库描述）等。\n\n注：关于license：请访问[Choose an open source license](https://choosealicense.com/)\n\n\n<a name=\"third\"></a>\n# 3、上传至仓库\n1、下载[GitHub Desktop](https://desktop.github.com/)\n\n2、打开软件\n\n3、克隆仓库\n\n![Github Desktop](https://s1.ax1x.com/2020/10/06/0UFGXq.png)\n\n编写，点击**COMMIT TO MASTER**和**PUSH ORIGN**即可！\n<a name=\"fourth\"></a>\n# 4、使用Github Pages创造自己的网站\n新建一个仓库，以**username.github.io** 命名（username是指你的用户名）\n新建完成后，使用Github Desktop推送网页至该仓库。\nQ&：万一网站做不好肿么办？\nA：\n1、使用Github主题：\n访问**Settings->GitHub Pages->Theme Chooser->Change Theme** 选择样式，不过好像只适合写主页，并且必须使用**Markdown**格式。\n2、使用模板网站，这里推荐[HTML5 UP](https://html5up.net/)\n![HTML5UP](https://s1.ax1x.com/2020/10/06/0UFdNF.png)\n看到自己心仪的主题，可以选择**Free Download**，或者点击**Live Demo**查看预览。\n注：大家可以看看我的网站：[xiezheyuan.top](http://www.xiezheyuan.top/)\n\n<a name=\"fifth\"></a>\n\n# 5、为自己的项目创建Github Pages 网站\n与*4、使用Github Pages创造自己的网站* 类似，不过需要选择Settings->GitHub Pages->Source选择上传地址，默认为None，建议为**master branch /docs folder**，这样可以将网站与程序分开（**master branch /docs folder**指仅上传docs目录）\n首发于CSDN博客https://blog.csdn.net/pythonbilly","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css\"><h3 id=\"本文章为imgchr图床测试文章\"><a href=\"#本文章为imgchr图床测试文章\" class=\"headerlink\" title=\"本文章为imgchr图床测试文章\"></a>本文章为imgchr图床测试文章</h3><h1 id=\"0、目录\"><a href=\"#0、目录\" class=\"headerlink\" title=\"0、目录\"></a>0、目录</h1><a id=\"more\"></a>\n<p><a href=\"#first\">1、注册GitHub 账户</a><br><a href=\"#second\">2、创建第一个仓库 </a><br><a href=\"#third\">3、上传至仓库</a><br><a name=\"#fourth\">4、使用Github Pages创造自己的网站</a></p>\n<h1 id=\"1、注册GitHub-账户\"><a href=\"#1、注册GitHub-账户\" class=\"headerlink\" title=\"1、注册GitHub 账户\"></a>1、注册GitHub 账户</h1><p>访问<a href=\"http://www.github.com/\" target=\"_blank\" rel=\"noopener\">Github</a>,若无意外，则效果为以下所示（Firefox)</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/06/0UFtBV.png\" alt=\"Github首页\"></p>\n<p>输入<strong>用户名</strong>、<strong>邮箱（确保可用）</strong>、<strong>密码</strong>，点击Sign up for Github，再填写几个个人信息，就Well Done了！</p>\n<p>注册完后点击Sign in,填写用户名及密码即可。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/06/0UF8cn.png\" alt=\"Github 登录页\"></p>\n<p>然后就可以看到个人界面了！</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/06/0UFYn0.png\" alt=\"Github 个人主页\"><br><a name=\"second\"></a></p>\n<h1 id=\"2、创建第一个仓库\"><a href=\"#2、创建第一个仓库\" class=\"headerlink\" title=\"2、创建第一个仓库\"></a>2、创建第一个仓库</h1><p>点击Repositories右侧的New，即可跳转至仓库创造页！</p>\n<p>​<img src=\"https://s1.ax1x.com/2020/10/06/0UFN7T.png\" alt=\"仓库创造页\"></p>\n<p>可以填写Repository name(仓库名称）、Description（仓库描述）等。</p>\n<p>注：关于license：请访问<a href=\"https://choosealicense.com/\" target=\"_blank\" rel=\"noopener\">Choose an open source license</a></p>\n<p><a name=\"third\"></a></p>\n<h1 id=\"3、上传至仓库\"><a href=\"#3、上传至仓库\" class=\"headerlink\" title=\"3、上传至仓库\"></a>3、上传至仓库</h1><p>1、下载<a href=\"https://desktop.github.com/\" target=\"_blank\" rel=\"noopener\">GitHub Desktop</a></p>\n<p>2、打开软件</p>\n<p>3、克隆仓库</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/06/0UFGXq.png\" alt=\"Github Desktop\"></p>\n<p>编写，点击<strong>COMMIT TO MASTER</strong>和<strong>PUSH ORIGN</strong>即可！<br><a name=\"fourth\"></a></p>\n<h1 id=\"4、使用Github-Pages创造自己的网站\"><a href=\"#4、使用Github-Pages创造自己的网站\" class=\"headerlink\" title=\"4、使用Github Pages创造自己的网站\"></a>4、使用Github Pages创造自己的网站</h1><p>新建一个仓库，以<strong>username.github.io</strong> 命名（username是指你的用户名）<br>新建完成后，使用Github Desktop推送网页至该仓库。<br>Q&amp;：万一网站做不好肿么办？<br>A：<br>1、使用Github主题：<br>访问<strong>Settings-&gt;GitHub Pages-&gt;Theme Chooser-&gt;Change Theme</strong> 选择样式，不过好像只适合写主页，并且必须使用<strong>Markdown</strong>格式。<br>2、使用模板网站，这里推荐<a href=\"https://html5up.net/\" target=\"_blank\" rel=\"noopener\">HTML5 UP</a><br><img src=\"https://s1.ax1x.com/2020/10/06/0UFdNF.png\" alt=\"HTML5UP\"><br>看到自己心仪的主题，可以选择<strong>Free Download</strong>，或者点击<strong>Live Demo</strong>查看预览。<br>注：大家可以看看我的网站：<a href=\"http://www.xiezheyuan.top/\" target=\"_blank\" rel=\"noopener\">xiezheyuan.top</a></p>\n<p><a name=\"fifth\"></a></p>\n<h1 id=\"5、为自己的项目创建Github-Pages-网站\"><a href=\"#5、为自己的项目创建Github-Pages-网站\" class=\"headerlink\" title=\"5、为自己的项目创建Github Pages 网站\"></a>5、为自己的项目创建Github Pages 网站</h1><p>与<em>4、使用Github Pages创造自己的网站</em> 类似，不过需要选择Settings-&gt;GitHub Pages-&gt;Source选择上传地址，默认为None，建议为<strong>master branch /docs folder</strong>，这样可以将网站与程序分开（<strong>master branch /docs folder</strong>指仅上传docs目录）<br>首发于CSDN博客<a href=\"https://blog.csdn.net/pythonbilly\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/pythonbilly</a></p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","tags":[{"name":"Github","slug":"Github","permalink":"http://xiezheyuan.top/tags/Github/"}]},{"title":"python 制作CPU压力测试——圆周率计算","date":"2020-03-31T16:00:00.000Z","path":"2020/04/01/python-countpi/","text":"众所周知，反正弦函数asin有以下公式（如在计算器中是弧度制下）： 百度百科搜索三角函数公式，在泰勒展开式一节中有以下公式： 其中arcsin写错了，(2k+1)!!应该是(2k-1)!!另外x!!指双阶乘，不同于阶乘 其中arcsin写错了，(2k+1)!!应该是(2k-1)!!另外x!!指双阶乘，不同于阶乘 双阶乘实现： def doubleFact(x): ans=1 for i in range(1,x+1): if i%2 == x%2: ans*=i return ans asin函数实现 def asin(x,t): answer=0 for k in range(0,t+1): a=(doubleFact(2*k-1)/doubleFact(2*k))*(pow(x,2*k+1)/(2*k+1)) print(\"k=%d,a=%s\"%(k,a)) answer+=a 其中x为角度（弧度），t为计算次数。 注：代码奇慢无比，不要真正用来计算pi，又慢精度又不高，建议只用来编写CPU压力测试程序！ 总代吗贴出来： # import math def doubleFact(x): ans=1 for i in range(1,x+1): if i%2 == x%2: ans*=i return ans def asin(x,t): answer=0 for k in range(0,t+1): a=(doubleFact(2*k-1)/doubleFact(2*k))*(pow(x,2*k+1)/(2*k+1)) print(\"k=%d,a=%s\"%(k,a)) answer+=a return answer print(asin(1,100)*2) 计算结果： k=0,a=1.0 k=1,a=0.16666666666666666 k=2,a=0.07500000000000001 k=3,a=0.04464285714285714 k=4,a=0.030381944444444444 k=5,a=0.022372159090909092 k=6,a=0.017352764423076924 k=7,a=0.013964843749999999 k=8,a=0.011551800896139705 k=9,a=0.009761609529194078 k=10,a=0.008390335809616815 k=11,a=0.007312525873598845 k=12,a=0.006447210311889649 k=13,a=0.005740037670841923 k=14,a=0.005153309682319904 k=15,a=0.004660143486915096 k=16,a=0.004240907093679363 k=17,a=0.003880964558837669 k=18,a=0.0035692053938259347 k=19,a=0.0032970595034734844 k=20,a=0.0030578216492580306 k=21,a=0.002846178401108942 k=22,a=0.00265787063820729 k=23,a=0.0024894486782468836 k=24,a=0.002338091892111975 k=25,a=0.0022014739737101384 k=26,a=0.002077661032518167 k=27,a=0.0019650336162772837 k=28,a=0.0018622264064031273 k=29,a=0.0017680811205154183 k=30,a=0.0016816093935831068 k=31,a=0.0016019632753514438 k=32,a=0.0015284115961225677 k=33,a=0.0014603208940791154 k=34,a=0.0013971399176302534 k=35,a=0.0013383869512751784 k=36,a=0.0012836393876290285 k=37,a=0.001232525098500017 k=38,a=0.0011847152561624392 k=39,a=0.0011399183307022236 k=40,a=0.0010978750465914472 k=41,a=0.001058354125872243 k=42,a=0.0010211486797106276 k=43,a=0.0009860731369833312 k=44,a=0.0009529606197429564 k=45,a=0.0009216606921836336 k=46,a=0.0008920374230917098 k=47,a=0.0008639677124658675 k=48,a=0.000837339841602712 k=49,a=0.0008120522129086703 k=50,a=0.0007880122513582057 k=51,a=0.0007651354441371649 k=52,a=0.0007433444987958959 k=53,a=0.0007225686033525614 k=54,a=0.0007027427743614913 k=55,a=0.0006838072810965503 k=56,a=0.0006657071357767537 k=57,a=0.000648391641245871 k=58,a=0.0006318139887619102 k=59,a=0.0006159308995984751 k=60,a=0.0006007023050422869 k=61,a=0.0005860910601175613 k=62,a=0.0005720626870011989 k=63,a=0.0005585851446315293 k=64,a=0.0005456286214729855 k=65,a=0.0005331653487922461 k=66,a=0.0005211694321385132 k=67,a=0.0005096166990104013 k=68,a=0.000498484560941636 k=69,a=0.0004877518884534234 k=70,a=0.000477398897508034 k=71,a=0.000467407046260082 k=72,a=0.00045775894104274026 k=73,a=0.00044843825064875664 k=74,a=0.0004394296280731444 k=75,a=0.00043071863897800795 k=76,a=0.0004222916962219453 k=77,a=0.0004141359998684339 k=78,a=0.0004062394821508707 k=79,a=0.00039859075692766545 k=80,a=0.00039117907320994984 k=81,a=0.0003839942723879085 k=82,a=0.00037702674882018997 k=83,a=0.000370267413484946 k=84,a=0.0003637076604213038 k=85,a=0.0003573393357169886 k=86,a=0.0003511547088217658 k=87,a=0.00034514644598773823 k=88,a=0.00033930758565660254 k=89,a=0.00033363151563102445 k=90,a=0.0003281119518825554 k=91,a=0.00032274291886219894 k=92,a=0.00031751873119201474 k=93,a=0.0003124339766271837 k=94,a=0.00030748350018788655 k=95,a=0.00030266238936928896 k=96,a=0.0002979659603459907 k=97,a=0.0002933897450945759 k=98,a=0.0002889294793644786 k=99,a=0.00028458109143332955 k=100,a=0.0002803406915883404 3.0292687382573695 还是不是很精确啊！ PS：花了0.002991199493408203秒，虽然看起来很快，但是10000次花了快5分钟呢！ 首发于CSDN博客https://blog.csdn.net/pythonbilly document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","raw":"title: python 制作CPU压力测试——圆周率计算\ntags:\n  \n  - python\n  - 圆周率\ndescription: 制作CPU压力测试\ncategories:\n    - 计算机\n    \ndate: 2020-04-01 00:00:00\n---\n众所周知，反正弦函数asin有以下公式（如在计算器中是弧度制下）：\n<!--more-->\n\n![asin(1)=pi/2](https://private.codecogs.com/gif.latex?%5Cfrac%7B%5Cpi%7D%7B2%7D%3Darcsin%5Cleft%20%28%201%20%5Cright%20%29)\n\n百度百科搜索三角函数公式，在泰勒展开式一节中有以下公式：\n![其中arcsin写错了，(2k+1)!!应该是(2k-1)!!\n另外x!!指双阶乘，不同于阶乘](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ia2ltZy5jZG4uYmNlYm9zLmNvbS9waWMvYjk5OWE5MDE0YzA4NmUwNmNhZDMzMzFmMGQwODdiZjQwYWQxY2I2Zg?x-oss-process=image/format,png)\n> 其中arcsin写错了，(2k+1)!!应该是(2k-1)!!\n另外x!!指双阶乘，不同于阶乘\n\n其中arcsin写错了，(2k+1)!!应该是(2k-1)!!\n另外x!!指双阶乘，不同于阶乘\n\n\n双阶乘实现：\n```python\ndef doubleFact(x):\n    ans=1\n    for i in range(1,x+1):\n        if i%2 == x%2:\n            ans*=i\n    return ans\n```\nasin函数实现\n```python\ndef asin(x,t):\n    answer=0\n    for k in range(0,t+1):\n        a=(doubleFact(2*k-1)/doubleFact(2*k))*(pow(x,2*k+1)/(2*k+1))\n        print(\"k=%d,a=%s\"%(k,a))\n        answer+=a\n```\n其中x为角度（弧度），t为计算次数。\n\n注：代码奇慢无比，不要真正用来计算pi，又慢精度又不高，建议只用来编写CPU压力测试程序！\n\n总代吗贴出来：\n```python\n# import math\ndef doubleFact(x):\n    ans=1\n    for i in range(1,x+1):\n        if i%2 == x%2:\n            ans*=i\n    return ans\ndef asin(x,t):\n    answer=0\n    for k in range(0,t+1):\n        a=(doubleFact(2*k-1)/doubleFact(2*k))*(pow(x,2*k+1)/(2*k+1))\n        print(\"k=%d,a=%s\"%(k,a))\n        answer+=a\n\n    return answer\nprint(asin(1,100)*2)\n```\n计算结果：\n```python\nk=0,a=1.0\nk=1,a=0.16666666666666666\nk=2,a=0.07500000000000001\nk=3,a=0.04464285714285714\nk=4,a=0.030381944444444444\nk=5,a=0.022372159090909092\nk=6,a=0.017352764423076924\nk=7,a=0.013964843749999999\nk=8,a=0.011551800896139705\nk=9,a=0.009761609529194078\nk=10,a=0.008390335809616815\nk=11,a=0.007312525873598845\nk=12,a=0.006447210311889649\nk=13,a=0.005740037670841923\nk=14,a=0.005153309682319904\nk=15,a=0.004660143486915096\nk=16,a=0.004240907093679363\nk=17,a=0.003880964558837669\nk=18,a=0.0035692053938259347\nk=19,a=0.0032970595034734844\nk=20,a=0.0030578216492580306\nk=21,a=0.002846178401108942\nk=22,a=0.00265787063820729\nk=23,a=0.0024894486782468836\nk=24,a=0.002338091892111975\nk=25,a=0.0022014739737101384\nk=26,a=0.002077661032518167\nk=27,a=0.0019650336162772837\nk=28,a=0.0018622264064031273\nk=29,a=0.0017680811205154183\nk=30,a=0.0016816093935831068\nk=31,a=0.0016019632753514438\nk=32,a=0.0015284115961225677\nk=33,a=0.0014603208940791154\nk=34,a=0.0013971399176302534\nk=35,a=0.0013383869512751784\nk=36,a=0.0012836393876290285\nk=37,a=0.001232525098500017\nk=38,a=0.0011847152561624392\nk=39,a=0.0011399183307022236\nk=40,a=0.0010978750465914472\nk=41,a=0.001058354125872243\nk=42,a=0.0010211486797106276\nk=43,a=0.0009860731369833312\nk=44,a=0.0009529606197429564\nk=45,a=0.0009216606921836336\nk=46,a=0.0008920374230917098\nk=47,a=0.0008639677124658675\nk=48,a=0.000837339841602712\nk=49,a=0.0008120522129086703\nk=50,a=0.0007880122513582057\nk=51,a=0.0007651354441371649\nk=52,a=0.0007433444987958959\nk=53,a=0.0007225686033525614\nk=54,a=0.0007027427743614913\nk=55,a=0.0006838072810965503\nk=56,a=0.0006657071357767537\nk=57,a=0.000648391641245871\nk=58,a=0.0006318139887619102\nk=59,a=0.0006159308995984751\nk=60,a=0.0006007023050422869\nk=61,a=0.0005860910601175613\nk=62,a=0.0005720626870011989\nk=63,a=0.0005585851446315293\nk=64,a=0.0005456286214729855\nk=65,a=0.0005331653487922461\nk=66,a=0.0005211694321385132\nk=67,a=0.0005096166990104013\nk=68,a=0.000498484560941636\nk=69,a=0.0004877518884534234\nk=70,a=0.000477398897508034\nk=71,a=0.000467407046260082\nk=72,a=0.00045775894104274026\nk=73,a=0.00044843825064875664\nk=74,a=0.0004394296280731444\nk=75,a=0.00043071863897800795\nk=76,a=0.0004222916962219453\nk=77,a=0.0004141359998684339\nk=78,a=0.0004062394821508707\nk=79,a=0.00039859075692766545\nk=80,a=0.00039117907320994984\nk=81,a=0.0003839942723879085\nk=82,a=0.00037702674882018997\nk=83,a=0.000370267413484946\nk=84,a=0.0003637076604213038\nk=85,a=0.0003573393357169886\nk=86,a=0.0003511547088217658\nk=87,a=0.00034514644598773823\nk=88,a=0.00033930758565660254\nk=89,a=0.00033363151563102445\nk=90,a=0.0003281119518825554\nk=91,a=0.00032274291886219894\nk=92,a=0.00031751873119201474\nk=93,a=0.0003124339766271837\nk=94,a=0.00030748350018788655\nk=95,a=0.00030266238936928896\nk=96,a=0.0002979659603459907\nk=97,a=0.0002933897450945759\nk=98,a=0.0002889294793644786\nk=99,a=0.00028458109143332955\nk=100,a=0.0002803406915883404\n3.0292687382573695\n```\n还是不是很精确啊！\n\nPS：花了0.002991199493408203秒，虽然看起来很快，但是10000次花了快5分钟呢！\n\n\n首发于CSDN博客https://blog.csdn.net/pythonbilly","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css\"><p>众所周知，反正弦函数asin有以下公式（如在计算器中是弧度制下）：</p>\n<a id=\"more\"></a>\n\n<p><img src=\"https://private.codecogs.com/gif.latex?%5Cfrac%7B%5Cpi%7D%7B2%7D%3Darcsin%5Cleft%20%28%201%20%5Cright%20%29\" alt=\"asin(1)=pi/2\"></p>\n<p>百度百科搜索三角函数公式，在泰勒展开式一节中有以下公式：<br><img src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9ia2ltZy5jZG4uYmNlYm9zLmNvbS9waWMvYjk5OWE5MDE0YzA4NmUwNmNhZDMzMzFmMGQwODdiZjQwYWQxY2I2Zg?x-oss-process=image/format,png\" alt=\"其中arcsin写错了，(2k+1)!!应该是(2k-1)!!\n另外x!!指双阶乘，不同于阶乘\"></p>\n<blockquote>\n<p>其中arcsin写错了，(2k+1)!!应该是(2k-1)!!<br>另外x!!指双阶乘，不同于阶乘</p>\n</blockquote>\n<p>其中arcsin写错了，(2k+1)!!应该是(2k-1)!!<br>另外x!!指双阶乘，不同于阶乘</p>\n<p>双阶乘实现：</p>\n<pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">doubleFact</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ans<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> i<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> x<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n            ans<span class=\"token operator\">*=</span>i\n    <span class=\"token keyword\">return</span> ans</code></pre>\n<p>asin函数实现</p>\n<pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">asin</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>t<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        a<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>doubleFact<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>doubleFact<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>pow<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"k=%d,a=%s\"</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        answer<span class=\"token operator\">+=</span>a</code></pre>\n<p>其中x为角度（弧度），t为计算次数。</p>\n<p>注：代码奇慢无比，不要真正用来计算pi，又慢精度又不高，建议只用来编写CPU压力测试程序！</p>\n<p>总代吗贴出来：</p>\n<pre class=\" language-python\"><code class=\"language-python\"><span class=\"token comment\" spellcheck=\"true\"># import math</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">doubleFact</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    ans<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> i<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> x<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n            ans<span class=\"token operator\">*=</span>i\n    <span class=\"token keyword\">return</span> ans\n<span class=\"token keyword\">def</span> <span class=\"token function\">asin</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>t<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        a<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>doubleFact<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>doubleFact<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>pow<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"k=%d,a=%s\"</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        answer<span class=\"token operator\">+=</span>a\n\n    <span class=\"token keyword\">return</span> answer\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>asin<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre>\n<p>计算结果：</p>\n<pre class=\" language-python\"><code class=\"language-python\">k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">1.0</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.16666666666666666</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.07500000000000001</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.04464285714285714</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.030381944444444444</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.022372159090909092</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.017352764423076924</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.013964843749999999</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.011551800896139705</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.009761609529194078</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.008390335809616815</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.007312525873598845</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.006447210311889649</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.005740037670841923</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.005153309682319904</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.004660143486915096</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.004240907093679363</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.003880964558837669</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0035692053938259347</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0032970595034734844</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0030578216492580306</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.002846178401108942</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">22</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00265787063820729</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0024894486782468836</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">24</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.002338091892111975</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0022014739737101384</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">26</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.002077661032518167</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">27</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0019650336162772837</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">28</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0018622264064031273</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">29</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0017680811205154183</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0016816093935831068</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0016019632753514438</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0015284115961225677</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0014603208940791154</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0013971399176302534</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0013383869512751784</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">36</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0012836393876290285</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">37</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.001232525098500017</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">38</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0011847152561624392</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">39</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0011399183307022236</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0010978750465914472</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">41</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.001058354125872243</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0010211486797106276</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">43</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0009860731369833312</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0009529606197429564</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0009216606921836336</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">46</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0008920374230917098</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">47</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0008639677124658675</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.000837339841602712</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">49</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0008120522129086703</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0007880122513582057</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">51</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0007651354441371649</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">52</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0007433444987958959</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0007225686033525614</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">54</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0007027427743614913</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0006838072810965503</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">56</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0006657071357767537</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">57</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.000648391641245871</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">58</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0006318139887619102</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">59</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0006159308995984751</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0006007023050422869</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">61</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0005860910601175613</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">62</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0005720626870011989</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">63</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0005585851446315293</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0005456286214729855</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0005331653487922461</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">66</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0005211694321385132</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">67</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0005096166990104013</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">68</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.000498484560941636</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">69</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0004877518884534234</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">70</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.000477398897508034</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">71</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.000467407046260082</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">72</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00045775894104274026</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">73</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00044843825064875664</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">74</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0004394296280731444</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00043071863897800795</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">76</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0004222916962219453</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">77</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0004141359998684339</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">78</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0004062394821508707</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">79</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00039859075692766545</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00039117907320994984</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">81</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0003839942723879085</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">82</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00037702674882018997</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">83</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.000370267413484946</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">84</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0003637076604213038</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0003573393357169886</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">86</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0003511547088217658</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">87</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00034514644598773823</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">88</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00033930758565660254</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">89</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00033363151563102445</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0003281119518825554</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">91</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00032274291886219894</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">92</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00031751873119201474</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">93</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0003124339766271837</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">94</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00030748350018788655</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">95</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00030266238936928896</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">96</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0002979659603459907</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">97</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0002933897450945759</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">98</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0002889294793644786</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.00028458109143332955</span>\nk<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">=</span><span class=\"token number\">0.0002803406915883404</span>\n<span class=\"token number\">3.0292687382573695</span></code></pre>\n<p>还是不是很精确啊！</p>\n<p>PS：花了0.002991199493408203秒，虽然看起来很快，但是10000次花了快5分钟呢！</p>\n<p>首发于CSDN博客<a href=\"https://blog.csdn.net/pythonbilly\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/pythonbilly</a></p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","tags":[{"name":"python","slug":"python","permalink":"http://xiezheyuan.top/tags/python/"},{"name":"圆周率","slug":"圆周率","permalink":"http://xiezheyuan.top/tags/%E5%9C%86%E5%91%A8%E7%8E%87/"}]},{"title":"python实践项目-shop","date":"2019-10-26T13:48:18.000Z","path":"2019/10/26/python-shop/","text":"python实践项目-shop练习 文件打开/保存 cmd应用 prettytable 场景 使用CMD程序，实现商店管理python3+pycharm 源码getPicke.py 初始化PICKLE data=\"[[\\\"6953787355327\\\",\\\"晨光24色水彩笔\\\",\\\"25\\\"]]\" obj=open(\"libray/shop.pkl\",\"w\") obj.write(data) obj.close() pklAdmin.py 管理 print(\"Shop1.0 Pkl File Admin Program\") import prettytable while True: cmd=input(\">>>\") if cmd == \"quit\": print(\"exiting...\") break elif cmd == \"exit\": print(\"Do you want to exit now?\") option=input(\"(y/&lt;Other>)\") if(option == \"y\" or option == \"Y\"): print(\"exiting...\") break else: print(\"Canceled to exit\") elif cmd == \"read\" or cmd == \"Read\": print(\"You Want To Read Commodities.\") tobj=prettytable.PrettyTable([ \"Bar code\", \"Trade name\", \"Price(RMB)\" ]) o=eval(open(\"libray/shop.pkl\",\"r\",encoding=\"gbk\").read()) for i in o: tobj.add_row(i) print(tobj) elif cmd == \"add\": print(\"You Want To Add a Commodity\") s=input(\"Input Commodity Name...\") p=input(\"Input Commodity Price...\") b = input(\"Input Commodity Bar Code...\") o = eval(open(\"libray/shop.pkl\", \"r\",encoding=\"gbk\").read()) o.append([b,s,p]) obj=open(\"libray/shop.pkl\",\"w\") obj.write(str(o)) obj.close() print(\"Now,Add Right...\") tobj=prettytable.PrettyTable([ \"Bar code\", \"Trade name\", \"Price(RMB)\" ]) for i in o: tobj.add_row(i) print(tobj) elif cmd == \"help\": print(\"PklAdmin Document\") print(''' add:Add items to program directory. read/Read:Displays all saved items. exit:Quit program(can cancel). quit:Quit program(can't cancel) del/delete/remove:Remove items to program directory. help:Displays this. ''') elif cmd == \"del\" or cmd == \"delete\" or cmd == \"remove\": print(\"You want to delete a commodity\") b=input(\"Input Commodity Bar Code...\") o = eval(open(\"libray/shop.pkl\", \"r\", encoding=\"gbk\").read()) for i in o: if(i[0] == b): print(\"Find!\",i) o.remove(i) print(\"Now,Remove Right...\") tobj = prettytable.PrettyTable([ \"Bar code\", \"Trade name\", \"Price(RMB)\" ]) for i in o: tobj.add_row(i) print(tobj) obj = open(\"libray/shop.pkl\", \"w\") obj.write(str(o)) obj.close() else: print(\"No such command!Please verify the input.\") main1.py 主程序 print(\"SHOP 1.0 COMMAND PROGRAM\") def get(b): o = eval(open(\"libray/shop.pkl\", \"r\", encoding=\"gbk\").read()) for i in o: if(i[0] == b): return i return False while True: print(\"input item times...\") t=input(\"...\") if(t == None or t == \"\"): break t=int(t) sum_=0 for i in range(t): p=get(input(\"Bar code...\")) if(p == False): print(\"Don't have this item\") continue sum_= sum_ + int(p[2]) print(p[1],\"RMB\"+p[2]) print(\"Sum is %d\"%sum_) 详情请访问我的码云仓库下个项目再见，See you document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","raw":"title: python实践项目-shop\nauthor: Xie Zheyuan\ntags:\n  - python\ncategories:\n    - 计算机\ndate: 2019-10-26 21:48:18\n---\n## python实践项目-shop\n ## 练习\n\n - 文件打开/保存\n - cmd应用\n - prettytable\n <!--more-->\n ## 场景\n \n使用CMD程序，实现商店管理\npython3+pycharm\n## 源码\n**getPicke.py** 初始化PICKLE\n\n```python\ndata=\"[[\\\"6953787355327\\\",\\\"晨光24色水彩笔\\\",\\\"25\\\"]]\"\nobj=open(\"libray/shop.pkl\",\"w\")\nobj.write(data)\nobj.close()\n```\n**pklAdmin.py** 管理\n\n```python\nprint(\"Shop1.0 Pkl File Admin Program\")\nimport prettytable\nwhile True:\n    cmd=input(\">>>\")\n    if cmd == \"quit\":\n        print(\"exiting...\")\n        break\n    elif cmd == \"exit\":\n        print(\"Do you want to exit now?\")\n        option=input(\"(y/<Other>)\")\n        if(option == \"y\" or option == \"Y\"):\n            print(\"exiting...\")\n            break\n        else:\n            print(\"Canceled to exit\")\n    elif cmd == \"read\" or cmd == \"Read\":\n        print(\"You Want To Read Commodities.\")\n        tobj=prettytable.PrettyTable([\n            \"Bar code\",\n            \"Trade name\",\n            \"Price(RMB)\"\n        ])\n        o=eval(open(\"libray/shop.pkl\",\"r\",encoding=\"gbk\").read())\n        for i in o:\n            tobj.add_row(i)\n        print(tobj)\n    elif cmd == \"add\":\n        print(\"You Want To Add a Commodity\")\n        s=input(\"Input Commodity Name...\")\n        p=input(\"Input Commodity Price...\")\n        b = input(\"Input Commodity Bar Code...\")\n        o = eval(open(\"libray/shop.pkl\", \"r\",encoding=\"gbk\").read())\n        o.append([b,s,p])\n        obj=open(\"libray/shop.pkl\",\"w\")\n        obj.write(str(o))\n        obj.close()\n        print(\"Now,Add Right...\")\n        tobj=prettytable.PrettyTable([\n            \"Bar code\",\n            \"Trade name\",\n            \"Price(RMB)\"\n        ])\n        for i in o:\n            tobj.add_row(i)\n        print(tobj)\n    elif cmd == \"help\":\n        print(\"PklAdmin Document\")\n        print('''\n        add:Add items to program directory.\n        read/Read:Displays all saved items.\n        exit:Quit program(can cancel).\n        quit:Quit program(can't cancel)\n        del/delete/remove:Remove items to program directory.\n        help:Displays this.\n        ''')\n    elif cmd == \"del\" or cmd == \"delete\" or cmd == \"remove\":\n        print(\"You want to delete a commodity\")\n        b=input(\"Input Commodity Bar Code...\")\n        o = eval(open(\"libray/shop.pkl\", \"r\", encoding=\"gbk\").read())\n        for i in o:\n            if(i[0] == b):\n                print(\"Find!\",i)\n                o.remove(i)\n        print(\"Now,Remove Right...\")\n        tobj = prettytable.PrettyTable([\n            \"Bar code\",\n            \"Trade name\",\n            \"Price(RMB)\"\n        ])\n        for i in o:\n            tobj.add_row(i)\n        print(tobj)\n        obj = open(\"libray/shop.pkl\", \"w\")\n        obj.write(str(o))\n        obj.close()\n\n\n    else:\n        print(\"No such command!Please verify the input.\")\n\n\n```\n**main1.py** 主程序\n\n```python\nprint(\"SHOP 1.0 COMMAND PROGRAM\")\ndef get(b):\n    o = eval(open(\"libray/shop.pkl\", \"r\", encoding=\"gbk\").read())\n    for i in o:\n        if(i[0] == b):\n            return i\n    return False\nwhile True:\n    print(\"input item times...\")\n    t=input(\"...\")\n    if(t == None or t == \"\"):\n        break\n    t=int(t)\n    sum_=0\n    for i in range(t):\n        p=get(input(\"Bar code...\"))\n        if(p == False):\n            print(\"Don't have this item\")\n            continue\n        sum_= sum_ + int(p[2])\n        print(p[1],\"RMB\"+p[2])\n    print(\"Sum is %d\"%sum_)\n```\n详情请访问[我的码云仓库](https://gitee.com/pybilly/shop)\n下个项目再见，See you","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css\"><h2 id=\"python实践项目-shop\"><a href=\"#python实践项目-shop\" class=\"headerlink\" title=\"python实践项目-shop\"></a>python实践项目-shop</h2><h2 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h2><ul>\n<li>文件打开/保存</li>\n<li>cmd应用</li>\n<li>prettytable<a id=\"more\"></a>\n<h2 id=\"场景\"><a href=\"#场景\" class=\"headerlink\" title=\"场景\"></a>场景</h2></li>\n</ul>\n<p>使用CMD程序，实现商店管理<br>python3+pycharm</p>\n<h2 id=\"源码\"><a href=\"#源码\" class=\"headerlink\" title=\"源码\"></a>源码</h2><p><strong>getPicke.py</strong> 初始化PICKLE</p>\n<pre class=\" language-python\"><code class=\"language-python\">data<span class=\"token operator\">=</span><span class=\"token string\">\"[[\\\"6953787355327\\\",\\\"晨光24色水彩笔\\\",\\\"25\\\"]]\"</span>\nobj<span class=\"token operator\">=</span>open<span class=\"token punctuation\">(</span><span class=\"token string\">\"libray/shop.pkl\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span>\nobj<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\nobj<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<p><strong>pklAdmin.py</strong> 管理</p>\n<pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Shop1.0 Pkl File Admin Program\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> prettytable\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    cmd<span class=\"token operator\">=</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\">>>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> cmd <span class=\"token operator\">==</span> <span class=\"token string\">\"quit\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exiting...\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">elif</span> cmd <span class=\"token operator\">==</span> <span class=\"token string\">\"exit\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Do you want to exit now?\"</span><span class=\"token punctuation\">)</span>\n        option<span class=\"token operator\">=</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\"(y/&lt;Other>)\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>option <span class=\"token operator\">==</span> <span class=\"token string\">\"y\"</span> <span class=\"token operator\">or</span> option <span class=\"token operator\">==</span> <span class=\"token string\">\"Y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exiting...\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Canceled to exit\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> cmd <span class=\"token operator\">==</span> <span class=\"token string\">\"read\"</span> <span class=\"token operator\">or</span> cmd <span class=\"token operator\">==</span> <span class=\"token string\">\"Read\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You Want To Read Commodities.\"</span><span class=\"token punctuation\">)</span>\n        tobj<span class=\"token operator\">=</span>prettytable<span class=\"token punctuation\">.</span>PrettyTable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"Bar code\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Trade name\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Price(RMB)\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        o<span class=\"token operator\">=</span>eval<span class=\"token punctuation\">(</span>open<span class=\"token punctuation\">(</span><span class=\"token string\">\"libray/shop.pkl\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">\"gbk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> o<span class=\"token punctuation\">:</span>\n            tobj<span class=\"token punctuation\">.</span>add_row<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tobj<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> cmd <span class=\"token operator\">==</span> <span class=\"token string\">\"add\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You Want To Add a Commodity\"</span><span class=\"token punctuation\">)</span>\n        s<span class=\"token operator\">=</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\"Input Commodity Name...\"</span><span class=\"token punctuation\">)</span>\n        p<span class=\"token operator\">=</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\"Input Commodity Price...\"</span><span class=\"token punctuation\">)</span>\n        b <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token string\">\"Input Commodity Bar Code...\"</span><span class=\"token punctuation\">)</span>\n        o <span class=\"token operator\">=</span> eval<span class=\"token punctuation\">(</span>open<span class=\"token punctuation\">(</span><span class=\"token string\">\"libray/shop.pkl\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">\"gbk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        o<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        obj<span class=\"token operator\">=</span>open<span class=\"token punctuation\">(</span><span class=\"token string\">\"libray/shop.pkl\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span>\n        obj<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        obj<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Now,Add Right...\"</span><span class=\"token punctuation\">)</span>\n        tobj<span class=\"token operator\">=</span>prettytable<span class=\"token punctuation\">.</span>PrettyTable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"Bar code\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Trade name\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Price(RMB)\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> o<span class=\"token punctuation\">:</span>\n            tobj<span class=\"token punctuation\">.</span>add_row<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tobj<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> cmd <span class=\"token operator\">==</span> <span class=\"token string\">\"help\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PklAdmin Document\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\n        add:Add items to program directory.\n        read/Read:Displays all saved items.\n        exit:Quit program(can cancel).\n        quit:Quit program(can't cancel)\n        del/delete/remove:Remove items to program directory.\n        help:Displays this.\n        '''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> cmd <span class=\"token operator\">==</span> <span class=\"token string\">\"del\"</span> <span class=\"token operator\">or</span> cmd <span class=\"token operator\">==</span> <span class=\"token string\">\"delete\"</span> <span class=\"token operator\">or</span> cmd <span class=\"token operator\">==</span> <span class=\"token string\">\"remove\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You want to delete a commodity\"</span><span class=\"token punctuation\">)</span>\n        b<span class=\"token operator\">=</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\"Input Commodity Bar Code...\"</span><span class=\"token punctuation\">)</span>\n        o <span class=\"token operator\">=</span> eval<span class=\"token punctuation\">(</span>open<span class=\"token punctuation\">(</span><span class=\"token string\">\"libray/shop.pkl\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"gbk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> o<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Find!\"</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span>\n                o<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Now,Remove Right...\"</span><span class=\"token punctuation\">)</span>\n        tobj <span class=\"token operator\">=</span> prettytable<span class=\"token punctuation\">.</span>PrettyTable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"Bar code\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Trade name\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Price(RMB)\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> o<span class=\"token punctuation\">:</span>\n            tobj<span class=\"token punctuation\">.</span>add_row<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tobj<span class=\"token punctuation\">)</span>\n        obj <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span><span class=\"token string\">\"libray/shop.pkl\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span>\n        obj<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        obj<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No such command!Please verify the input.\"</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<p><strong>main1.py</strong> 主程序</p>\n<pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SHOP 1.0 COMMAND PROGRAM\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    o <span class=\"token operator\">=</span> eval<span class=\"token punctuation\">(</span>open<span class=\"token punctuation\">(</span><span class=\"token string\">\"libray/shop.pkl\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"gbk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> o<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> i\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input item times...\"</span><span class=\"token punctuation\">)</span>\n    t<span class=\"token operator\">=</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">==</span> None <span class=\"token operator\">or</span> t <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n    t<span class=\"token operator\">=</span>int<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n    sum_<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> range<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        p<span class=\"token operator\">=</span>get<span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\"Bar code...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">==</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Don't have this item\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">continue</span>\n        sum_<span class=\"token operator\">=</span> sum_ <span class=\"token operator\">+</span> int<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"RMB\"</span><span class=\"token operator\">+</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sum is %d\"</span><span class=\"token operator\">%</span>sum_<span class=\"token punctuation\">)</span></code></pre>\n<p>详情请访问<a href=\"https://gitee.com/pybilly/shop\" target=\"_blank\" rel=\"noopener\">我的码云仓库</a><br>下个项目再见，See you</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","tags":[{"name":"python","slug":"python","permalink":"http://xiezheyuan.top/tags/python/"}]},{"title":"python 猿编程模块（一）ybc_speech","date":"2019-10-05T16:00:00.000Z","path":"2019/10/06/python-ybc-module-ybcspeech/","text":"首先先安装模块 C:\\Python36\\python.exe -m pip install ybc-speech record:录制音频 def record(filename, seconds=__SECONDS, to_dir=__TO_DIR, rate=__RATE, channels=__CHANNELS, chunk=__CHANNELS): \"\"\" 功能：录制音频文件。 参数 filename 是录制生成的语音文件的名字， 可选参数 seconds 是录制时长（单位：秒），默认 5 秒， 可选参数 to_dir 是存放语音文件的目录，默认为当前目录， 可选参数 rate 是录制采样率，1 代表 16000，0 代表 8000，默认为 1， 可选参数 channels 是声道，默认 1， 可选参数 chunk 是一次读取的字节数，默认 1024， 返回：录制的音频文件的路径。 \"\"\" 示例：import ybc_speech as s import os s.record(\"aaa.wav\",10) os.system(\"aaa.wav\") voice2text:语音转文字 def voice2text(filename='', rate=__RATE, format_type=__FORMAT_TYPE): \"\"\" 功能：把语音文件转换成文字。 参数 filename 是当前目录下期望转换成文字的语音文件的名字， 可选参数 rate 是语音文件的采样率，1 代表 16000，0 代表 8000，默认为 1， 可选参数 format_type 是语音文件的类型，默认 PCM 格式， 返回：转换成的文字。 \"\"\" 示例：import ybc_speech as s #import os print(s.voice2text(\"aaa.wav\")) text2voice:语音合成 def text2voice(text, filename, speaker=__SPEAKER, speed=__SPEED, aht=__AHT, apc=__APC, volume=__VOLUME, _format=__FORMAT, rate=__RATE): \"\"\" 功能：把文字转换成语音。 参数 text 是待转换的文字， 参数 filename 是生成的语音文件的名字， 可选参数 speaker 是发音人，1 代表小刚（男声），2 代表小云（女声），默认为1， 可选参数 speed 是语速，1 代表正常速度，0.5 代表慢速，2 代表快速，默认为1， 可选参数 aht 是音高，默认为 0， 可选参数 apc 是音色，默认为 58， 可选参数 volume 是音量，默认为 100， 可选参数 _format 是语音文件的格式，1 代表 PCM，2 代表 WAV，3代表 MP3，默认为 2 ， 可选参数 rate 是语音采样率，1 代表 16000，0 代表 8000，默认为 1， 返回：生成的语音文件的名字。 \"\"\" 示例：import ybc_speech as s import os s.text2voice(\"Hello\",\"hello.wav\",2) os.system(\"hello.wav\") speak:播放便捷函数 def speak(text='', speaker=__SPEAKER, speed=__SPEED, aht=__AHT, apc=__APC): \"\"\" 功能：朗读一段文字。 参数 text 是待朗读的文字， 可选参数 speaker 是发音人，1 代表小刚（男声），2 代表小云（女声），默认为1， 可选参数 speed 是语速，1 代表正常速度，0.5 代表慢速，2 代表快速，默认为1， 可选参数 aht 是音高，默认为 0， 可选参数 apc 是音色，默认为 58， 返回：无。 \"\"\" 常量表 __RATE = 16000 __FORMAT_TYPE = 2 __SECONDS = 5 __TO_DIR = None __CHANNELS = 1 __CHUNK = 1024 __SPEAKER = 1 __SPEED = 1 __AHT = 0 __APC = 58 __VOLUME = 100 __FORMAT = 2 首发于CSDN博客https://blog.csdn.net/pythonbilly document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","raw":"title: python 猿编程模块（一）ybc_speech\ntags:\n  - python\n  - 猿编程\ndescription: 猿编程模块 ybc_speech\ndate: 2019-10-06 00:00:00\ncategories:\n    - 计算机\n  \n---\n首先先安装模块\n\n```bash\nC:\\Python36\\python.exe -m pip install ybc-speech\n```\n<!--more-->\n**record**:录制音频\n```python\ndef record(filename, seconds=__SECONDS, to_dir=__TO_DIR, rate=__RATE, channels=__CHANNELS, chunk=__CHANNELS):\n    \"\"\"\n    功能：录制音频文件。\n\n    参数 filename 是录制生成的语音文件的名字，\n\n    可选参数 seconds 是录制时长（单位：秒），默认 5 秒，\n\n    可选参数 to_dir 是存放语音文件的目录，默认为当前目录，\n\n    可选参数 rate 是录制采样率，1 代表 16000，0 代表 8000，默认为 1，\n\n    可选参数 channels 是声道，默认 1，\n\n    可选参数 chunk 是一次读取的字节数，默认 1024，\n\n    返回：录制的音频文件的路径。\n    \"\"\"\n```\n\n##### 示例：\n\n```python\nimport ybc_speech as s\nimport os\ns.record(\"aaa.wav\",10)\nos.system(\"aaa.wav\")\n```\n**voice2text**:语音转文字\n\n```python\ndef voice2text(filename='', rate=__RATE, format_type=__FORMAT_TYPE):\n    \"\"\"\n    功能：把语音文件转换成文字。\n\n    参数 filename 是当前目录下期望转换成文字的语音文件的名字，\n\n    可选参数 rate 是语音文件的采样率，1 代表 16000，0 代表 8000，默认为 1，\n\n    可选参数 format_type 是语音文件的类型，默认 PCM 格式，\n\n    返回：转换成的文字。\n    \"\"\"\n```\n##### 示例：\n\n```python\nimport ybc_speech as s\n#import os\nprint(s.voice2text(\"aaa.wav\"))\n```\n**text2voice**:语音合成\n\n```python\ndef text2voice(text, filename, speaker=__SPEAKER, speed=__SPEED, aht=__AHT, apc=__APC, volume=__VOLUME, _format=__FORMAT, rate=__RATE):\n    \"\"\"\n    功能：把文字转换成语音。\n\n    参数 text 是待转换的文字，\n\n    参数 filename 是生成的语音文件的名字，\n\n    可选参数 speaker 是发音人，1 代表小刚（男声），2 代表小云（女声），默认为1，\n\n    可选参数 speed 是语速，1 代表正常速度，0.5 代表慢速，2 代表快速，默认为1，\n\n    可选参数 aht 是音高，默认为 0，\n\n    可选参数 apc 是音色，默认为 58，\n\n    可选参数 volume 是音量，默认为 100，\n\n    可选参数 _format 是语音文件的格式，1 代表 PCM，2 代表 WAV，3代表 MP3，默认为 2 ，\n\n    可选参数 rate 是语音采样率，1 代表 16000，0 代表 8000，默认为 1，\n\n    返回：生成的语音文件的名字。\n    \"\"\"\n```\n##### 示例：\n\n```python\nimport ybc_speech as s\nimport os\ns.text2voice(\"Hello\",\"hello.wav\",2)\nos.system(\"hello.wav\")\n```\n**speak**:播放便捷函数\n\n```python\ndef speak(text='', speaker=__SPEAKER, speed=__SPEED, aht=__AHT, apc=__APC):\n    \"\"\"\n    功能：朗读一段文字。\n\n    参数 text 是待朗读的文字，\n\n    可选参数 speaker 是发音人，1 代表小刚（男声），2 代表小云（女声），默认为1，\n\n    可选参数 speed 是语速，1 代表正常速度，0.5 代表慢速，2 代表快速，默认为1，\n\n    可选参数 aht 是音高，默认为 0，\n\n    可选参数 apc 是音色，默认为 58，\n\n    返回：无。\n    \"\"\"\n```\n**常量表**\n\n```python\n__RATE = 16000\n__FORMAT_TYPE = 2\n__SECONDS = 5\n__TO_DIR = None\n__CHANNELS = 1\n__CHUNK = 1024\n__SPEAKER = 1\n__SPEED = 1\n__AHT = 0\n__APC = 58\n__VOLUME = 100\n__FORMAT = 2\n\n\n```\n首发于CSDN博客https://blog.csdn.net/pythonbilly","content":"<link rel=\"stylesheet\" type=\"text&#x2F;css\" href=\"https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css\"><p>首先先安装模块</p>\n<pre class=\" language-bash\"><code class=\"language-bash\">C:\\Python36\\python.exe -m pip <span class=\"token function\">install</span> ybc-speech</code></pre>\n<a id=\"more\"></a>\n<p><strong>record</strong>:录制音频</p>\n<pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">record</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> seconds<span class=\"token operator\">=</span>__SECONDS<span class=\"token punctuation\">,</span> to_dir<span class=\"token operator\">=</span>__TO_DIR<span class=\"token punctuation\">,</span> rate<span class=\"token operator\">=</span>__RATE<span class=\"token punctuation\">,</span> channels<span class=\"token operator\">=</span>__CHANNELS<span class=\"token punctuation\">,</span> chunk<span class=\"token operator\">=</span>__CHANNELS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    功能：录制音频文件。\n\n    参数 filename 是录制生成的语音文件的名字，\n\n    可选参数 seconds 是录制时长（单位：秒），默认 5 秒，\n\n    可选参数 to_dir 是存放语音文件的目录，默认为当前目录，\n\n    可选参数 rate 是录制采样率，1 代表 16000，0 代表 8000，默认为 1，\n\n    可选参数 channels 是声道，默认 1，\n\n    可选参数 chunk 是一次读取的字节数，默认 1024，\n\n    返回：录制的音频文件的路径。\n    \"\"\"</span></code></pre>\n<h5 id=\"示例：\"><a href=\"#示例：\" class=\"headerlink\" title=\"示例：\"></a>示例：</h5><pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> ybc_speech <span class=\"token keyword\">as</span> s\n<span class=\"token keyword\">import</span> os\ns<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">(</span><span class=\"token string\">\"aaa.wav\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\nos<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">\"aaa.wav\"</span><span class=\"token punctuation\">)</span></code></pre>\n<p><strong>voice2text</strong>:语音转文字</p>\n<pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">voice2text</span><span class=\"token punctuation\">(</span>filename<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> rate<span class=\"token operator\">=</span>__RATE<span class=\"token punctuation\">,</span> format_type<span class=\"token operator\">=</span>__FORMAT_TYPE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    功能：把语音文件转换成文字。\n\n    参数 filename 是当前目录下期望转换成文字的语音文件的名字，\n\n    可选参数 rate 是语音文件的采样率，1 代表 16000，0 代表 8000，默认为 1，\n\n    可选参数 format_type 是语音文件的类型，默认 PCM 格式，\n\n    返回：转换成的文字。\n    \"\"\"</span></code></pre>\n<h5 id=\"示例：-1\"><a href=\"#示例：-1\" class=\"headerlink\" title=\"示例：\"></a>示例：</h5><pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> ybc_speech <span class=\"token keyword\">as</span> s\n<span class=\"token comment\" spellcheck=\"true\">#import os</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>voice2text<span class=\"token punctuation\">(</span><span class=\"token string\">\"aaa.wav\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n<p><strong>text2voice</strong>:语音合成</p>\n<pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">text2voice</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">,</span> speaker<span class=\"token operator\">=</span>__SPEAKER<span class=\"token punctuation\">,</span> speed<span class=\"token operator\">=</span>__SPEED<span class=\"token punctuation\">,</span> aht<span class=\"token operator\">=</span>__AHT<span class=\"token punctuation\">,</span> apc<span class=\"token operator\">=</span>__APC<span class=\"token punctuation\">,</span> volume<span class=\"token operator\">=</span>__VOLUME<span class=\"token punctuation\">,</span> _format<span class=\"token operator\">=</span>__FORMAT<span class=\"token punctuation\">,</span> rate<span class=\"token operator\">=</span>__RATE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    功能：把文字转换成语音。\n\n    参数 text 是待转换的文字，\n\n    参数 filename 是生成的语音文件的名字，\n\n    可选参数 speaker 是发音人，1 代表小刚（男声），2 代表小云（女声），默认为1，\n\n    可选参数 speed 是语速，1 代表正常速度，0.5 代表慢速，2 代表快速，默认为1，\n\n    可选参数 aht 是音高，默认为 0，\n\n    可选参数 apc 是音色，默认为 58，\n\n    可选参数 volume 是音量，默认为 100，\n\n    可选参数 _format 是语音文件的格式，1 代表 PCM，2 代表 WAV，3代表 MP3，默认为 2 ，\n\n    可选参数 rate 是语音采样率，1 代表 16000，0 代表 8000，默认为 1，\n\n    返回：生成的语音文件的名字。\n    \"\"\"</span></code></pre>\n<h5 id=\"示例：-2\"><a href=\"#示例：-2\" class=\"headerlink\" title=\"示例：\"></a>示例：</h5><pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> ybc_speech <span class=\"token keyword\">as</span> s\n<span class=\"token keyword\">import</span> os\ns<span class=\"token punctuation\">.</span>text2voice<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hello.wav\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nos<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">\"hello.wav\"</span><span class=\"token punctuation\">)</span></code></pre>\n<p><strong>speak</strong>:播放便捷函数</p>\n<pre class=\" language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">speak</span><span class=\"token punctuation\">(</span>text<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> speaker<span class=\"token operator\">=</span>__SPEAKER<span class=\"token punctuation\">,</span> speed<span class=\"token operator\">=</span>__SPEED<span class=\"token punctuation\">,</span> aht<span class=\"token operator\">=</span>__AHT<span class=\"token punctuation\">,</span> apc<span class=\"token operator\">=</span>__APC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    功能：朗读一段文字。\n\n    参数 text 是待朗读的文字，\n\n    可选参数 speaker 是发音人，1 代表小刚（男声），2 代表小云（女声），默认为1，\n\n    可选参数 speed 是语速，1 代表正常速度，0.5 代表慢速，2 代表快速，默认为1，\n\n    可选参数 aht 是音高，默认为 0，\n\n    可选参数 apc 是音色，默认为 58，\n\n    返回：无。\n    \"\"\"</span></code></pre>\n<p><strong>常量表</strong></p>\n<pre class=\" language-python\"><code class=\"language-python\">__RATE <span class=\"token operator\">=</span> <span class=\"token number\">16000</span>\n__FORMAT_TYPE <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n__SECONDS <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n__TO_DIR <span class=\"token operator\">=</span> None\n__CHANNELS <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n__CHUNK <span class=\"token operator\">=</span> <span class=\"token number\">1024</span>\n__SPEAKER <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n__SPEED <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n__AHT <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n__APC <span class=\"token operator\">=</span> <span class=\"token number\">58</span>\n__VOLUME <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n__FORMAT <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n\n</code></pre>\n<p>首发于CSDN博客<a href=\"https://blog.csdn.net/pythonbilly\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/pythonbilly</a></p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","tags":[{"name":"python","slug":"python","permalink":"http://xiezheyuan.top/tags/python/"},{"name":"猿编程","slug":"猿编程","permalink":"http://xiezheyuan.top/tags/%E7%8C%BF%E7%BC%96%E7%A8%8B/"}]}]